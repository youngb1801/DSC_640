<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0918.1727                               -->
<workbook original-version='18.1' source-build='2020.3.1 (20203.20.0918.1727)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Year' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;2000&quot;'>
        <calculation class='tableau' formula='&quot;2000&quot;' />
        <members>
          <member value='&quot;2000&quot;' />
          <member value='&quot;2001&quot;' />
          <member value='&quot;2002&quot;' />
          <member value='&quot;2003&quot;' />
          <member value='&quot;2004&quot;' />
          <member value='&quot;2005&quot;' />
          <member value='&quot;2006&quot;' />
          <member value='&quot;2007&quot;' />
          <member value='&quot;2008&quot;' />
          <member value='&quot;2009&quot;' />
          <member value='&quot;2010&quot;' />
          <member value='&quot;2011&quot;' />
          <member value='&quot;2012&quot;' />
          <member value='&quot;2013&quot;' />
          <member value='&quot;2014&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Multiple Connections' inline='true' name='federated.1ewkeyc1px91zx1czjfsr1g9mnrx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airline-safety' name='textscan.1ulwse1197fjmm15tyfiq0p3dctd'>
            <connection class='textscan' directory='/Users/bretyoung/Desktop/DSC 640/Final Project Data' filename='airline-safety.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Cars_94-18' name='textscan.17fekc00bdgyjp1eseh6y0i9hoju'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='/Users/bretyoung/Desktop/DSC 640/Final Project Data/Cars_95-14.csv' dataRefreshTime='' directory='/Users/bretyoung/Desktop/DSC 640/Final Project Data' filename='Cars_94-18.csv' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Airplane Fatalities by Year 1918-2019' name='textscan.1fa2i7g12vyd2313eolk31vkg4p3'>
            <connection class='textscan' directory='/Users/bretyoung/Desktop/DSC 640/Final Project Data' filename='Airplane Fatalities by Year 1918-2019.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Financials' name='pdf.17iucm21jt13mc11l90051ejg7uw'>
            <connection class='pdf' cleaning='yes' compat='no' dataRefreshTime='' interpretationMode='257' origfilename='/Users/bretyoung/Desktop/DSC 640/Final Project Data/Financials.pdf' password='' pgFrom='' pgTo='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Airplane_Crashes_and_Fatalities_Since_1908' name='textscan.1vq5m350vr21s611js8oj0ta1uln'>
            <connection class='textscan' directory='/Users/bretyoung/Desktop/DSC 640/Final Project Data' filename='Airplane_Crashes_and_Fatalities_Since_1908.csv' password='' server='' />
          </named-connection>
          <named-connection caption='table_02_14_121819 2' name='textscan.0uyazgz1a03yvy16a05jp078toar'>
            <connection class='textscan' directory='/Users/bretyoung/Desktop/DSC 640/Final Project Data' filename='table_02_14_121819 2.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1fa2i7g12vyd2313eolk31vkg4p3' name='Airplane Fatalities by Year 1918-2019.csv' table='[/Users/bretyoung/Desktop/DSC 640/Final Project Data/Airplane Fatalities by Year 1918-2019#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Rank' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='integer' name='Fatalities' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1ulwse1197fjmm15tyfiq0p3dctd' name='airline-safety.csv' table='[/Users/bretyoung/Desktop/DSC 640/Final Project Data/airline-safety#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='airline' ordinal='0' />
              <column datatype='integer' name='avail_seat_km_per_week' ordinal='1' />
              <column datatype='integer' name='incidents_85_99' ordinal='2' />
              <column datatype='integer' name='fatal_accidents_85_99' ordinal='3' />
              <column datatype='integer' name='fatalities_85_99' ordinal='4' />
              <column datatype='integer' name='incidents_00_14' ordinal='5' />
              <column datatype='integer' name='fatal_accidents_00_14' ordinal='6' />
              <column datatype='integer' name='fatalities_00_14' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1fa2i7g12vyd2313eolk31vkg4p3' name='Airplane Fatalities by Year 1918-2019.csv' table='[/Users/bretyoung/Desktop/DSC 640/Final Project Data/Airplane Fatalities by Year 1918-2019#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Rank' ordinal='0' />
              <column datatype='integer' name='Year' ordinal='1' />
              <column datatype='integer' name='Fatalities' ordinal='2' />
            </columns>
          </relation>
          <relation connection='textscan.1vq5m350vr21s611js8oj0ta1uln' name='Airplane_Crashes_and_Fatalities_Since_1908.csv' table='[/Users/bretyoung/Desktop/DSC 640/Final Project Data/Airplane_Crashes_and_Fatalities_Since_1908#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='datetime' name='Time' ordinal='1' />
              <column datatype='string' name='Location' ordinal='2' />
              <column datatype='string' name='Operator' ordinal='3' />
              <column datatype='integer' name='Flight #' ordinal='4' />
              <column datatype='string' name='Route' ordinal='5' />
              <column datatype='string' name='Type' ordinal='6' />
              <column datatype='string' name='Registration' ordinal='7' />
              <column datatype='string' name='cn/In' ordinal='8' />
              <column datatype='integer' name='Aboard' ordinal='9' />
              <column datatype='integer' name='Fatalities' ordinal='10' />
              <column datatype='integer' name='Ground' ordinal='11' />
              <column datatype='string' name='Summary' ordinal='12' />
            </columns>
          </relation>
          <relation connection='textscan.1fa2i7g12vyd2313eolk31vkg4p3' name='Cars_94-18.csv' table='[/Users/bretyoung/Desktop/DSC 640/Final Project Data/Cars_94-18#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Year' ordinal='0' />
              <column datatype='integer' name='Fatalities' ordinal='1' />
              <column datatype='integer' name='Resident Population (Thousands)' ordinal='2' />
              <column datatype='real' name='Fatality Rate per 100,000 Population' ordinal='3' />
              <column datatype='integer' name='Licensed Drivers (Thousands)' ordinal='4' />
              <column datatype='real' name='Fatality Rate per 100,000 Licensed Drivers' ordinal='5' />
              <column datatype='integer' name='Registered Motor Vehicles (Thousands)' ordinal='6' />
              <column datatype='real' name='Fatality Rate per 100,000 Registered Vehicles' ordinal='7' />
              <column datatype='integer' name='Vehicle Miles Traveled (Billions)' ordinal='8' />
              <column datatype='real' name='Fatality Rate per 100 Million VMT' ordinal='9' />
            </columns>
          </relation>
          <relation connection='pdf.17iucm21jt13mc11l90051ejg7uw' name='Page    1 Table  1' table='[&apos;Page    1 Table  1$&apos;]' type='table'>
            <columns gridOrigin='A1:I48:no:A1:I48:4' lost='0' outcome='1' processed='362'>
              <column datatype='integer' name='Year' ordinal='0' />
              <column datatype='integer' name='Operating Revenue' ordinal='1' />
              <column datatype='integer' name='Fuel Expense' ordinal='2' />
              <column datatype='integer' name='Labor Expense' ordinal='3' />
              <column datatype='integer' name='Other Expense*' ordinal='4' />
              <column datatype='integer' name='Operating Expense' ordinal='5' />
              <column datatype='integer' name='Operating Profit' ordinal='6' />
              <column datatype='integer' name='Pre-Tax Profit' ordinal='7' />
              <column datatype='string' name='Net&#9;Profi' ordinal='8' />
            </columns>
          </relation>
          <relation connection='pdf.17iucm21jt13mc11l90051ejg7uw' name='Page    2 Table  1' table='[&apos;Page    2 Table  1$&apos;]' type='table'>
            <columns gridOrigin='A1:B44:no:A1:B44:1' lost='0' outcome='1' processed='86'>
              <column datatype='integer' name='Year' ordinal='0' />
              <column datatype='integer' name='Net&#9;Profit' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.0uyazgz1a03yvy16a05jp078toar' name='table_02_14_121819 2.csv1' table='[table_02_14_121819 2#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Year' ordinal='0' />
              <column datatype='integer' name='Total fatalities' ordinal='1' />
              <column datatype='integer' name='Total seriously injured persons' ordinal='2' />
              <column datatype='integer' name='Total accidents' ordinal='3' />
              <column datatype='integer' name='Total accidents, fatal' ordinal='4' />
              <column datatype='integer' name='Flight hours (thousands)' ordinal='5' />
              <column datatype='real' name='Fatalities' ordinal='6' />
              <column datatype='real' name='Seriously injured persons ' ordinal='7' />
              <column datatype='real' name='Total accidents 1' ordinal='8' />
              <column datatype='real' name='Total accidents, fatal 1' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.0uyazgz1a03yvy16a05jp078toar' name='table_02_14_121819 2.csv' table='[table_02_14_121819 2#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Year' ordinal='0' />
              <column datatype='integer' name='Total fatalities' ordinal='1' />
              <column datatype='integer' name='Total seriously injured persons' ordinal='2' />
              <column datatype='integer' name='Total accidents' ordinal='3' />
              <column datatype='integer' name='Total accidents, fatal' ordinal='4' />
              <column datatype='integer' name='Flight hours (thousands)' ordinal='5' />
              <column datatype='real' name='Fatalities' ordinal='6' />
              <column datatype='real' name='Seriously injured persons ' ordinal='7' />
              <column datatype='real' name='Total accidents 1' ordinal='8' />
              <column datatype='real' name='Total accidents, fatal 1' ordinal='9' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Aboard]' value='[Airplane_Crashes_and_Fatalities_Since_1908.csv].[Aboard]' />
          <map key='[Date]' value='[Airplane_Crashes_and_Fatalities_Since_1908.csv].[Date]' />
          <map key='[Fatalities (Airplane Fatalities by Year 1918-2019.csv)]' value='[Airplane Fatalities by Year 1918-2019.csv].[Fatalities]' />
          <map key='[Fatalities (Cars_94-18.csv)]' value='[Cars_94-18.csv].[Fatalities]' />
          <map key='[Fatalities (table_02_14_121819 2.csv)]' value='[table_02_14_121819 2.csv].[Fatalities]' />
          <map key='[Fatalities (table_02_14_121819 2.csv1)]' value='[table_02_14_121819 2.csv1].[Fatalities]' />
          <map key='[Fatalities]' value='[Airplane_Crashes_and_Fatalities_Since_1908.csv].[Fatalities]' />
          <map key='[Fatality Rate per 100 Million VMT (Cars_94-18.csv)]' value='[Cars_94-18.csv].[Fatality Rate per 100 Million VMT]' />
          <map key='[Fatality Rate per 100,000 Licensed Drivers (Cars_94-18.csv)]' value='[Cars_94-18.csv].[Fatality Rate per 100,000 Licensed Drivers]' />
          <map key='[Fatality Rate per 100,000 Population (Cars_94-18.csv)]' value='[Cars_94-18.csv].[Fatality Rate per 100,000 Population]' />
          <map key='[Fatality Rate per 100,000 Registered Vehicles (Cars_94-18.csv)]' value='[Cars_94-18.csv].[Fatality Rate per 100,000 Registered Vehicles]' />
          <map key='[Flight #]' value='[Airplane_Crashes_and_Fatalities_Since_1908.csv].[Flight #]' />
          <map key='[Flight hours (thousands) (table_02_14_121819 2.csv1)]' value='[table_02_14_121819 2.csv1].[Flight hours (thousands)]' />
          <map key='[Flight hours (thousands)]' value='[table_02_14_121819 2.csv].[Flight hours (thousands)]' />
          <map key='[Fuel Expense]' value='[Page    1 Table  1].[Fuel Expense]' />
          <map key='[Ground]' value='[Airplane_Crashes_and_Fatalities_Since_1908.csv].[Ground]' />
          <map key='[Labor Expense]' value='[Page    1 Table  1].[Labor Expense]' />
          <map key='[Licensed Drivers (Thousands) (Cars_94-18.csv)]' value='[Cars_94-18.csv].[Licensed Drivers (Thousands)]' />
          <map key='[Location]' value='[Airplane_Crashes_and_Fatalities_Since_1908.csv].[Location]' />
          <map key='[Net&#9;Profi]' value='[Page    1 Table  1].[Net&#9;Profi]' />
          <map key='[Net&#9;Profit]' value='[Page    2 Table  1].[Net&#9;Profit]' />
          <map key='[Operating Expense]' value='[Page    1 Table  1].[Operating Expense]' />
          <map key='[Operating Profit]' value='[Page    1 Table  1].[Operating Profit]' />
          <map key='[Operating Revenue]' value='[Page    1 Table  1].[Operating Revenue]' />
          <map key='[Operator]' value='[Airplane_Crashes_and_Fatalities_Since_1908.csv].[Operator]' />
          <map key='[Other Expense*]' value='[Page    1 Table  1].[Other Expense*]' />
          <map key='[Pre-Tax Profit]' value='[Page    1 Table  1].[Pre-Tax Profit]' />
          <map key='[Rank]' value='[Airplane Fatalities by Year 1918-2019.csv].[Rank]' />
          <map key='[Registered Motor Vehicles (Thousands) (Cars_94-18.csv)]' value='[Cars_94-18.csv].[Registered Motor Vehicles (Thousands)]' />
          <map key='[Registration]' value='[Airplane_Crashes_and_Fatalities_Since_1908.csv].[Registration]' />
          <map key='[Resident Population (Thousands) (Cars_94-18.csv)]' value='[Cars_94-18.csv].[Resident Population (Thousands)]' />
          <map key='[Route]' value='[Airplane_Crashes_and_Fatalities_Since_1908.csv].[Route]' />
          <map key='[Seriously injured persons  (table_02_14_121819 2.csv1)]' value='[table_02_14_121819 2.csv1].[Seriously injured persons ]' />
          <map key='[Seriously injured persons ]' value='[table_02_14_121819 2.csv].[Seriously injured persons ]' />
          <map key='[Summary]' value='[Airplane_Crashes_and_Fatalities_Since_1908.csv].[Summary]' />
          <map key='[Time]' value='[Airplane_Crashes_and_Fatalities_Since_1908.csv].[Time]' />
          <map key='[Total accidents (table_02_14_121819 2.csv1)]' value='[table_02_14_121819 2.csv1].[Total accidents]' />
          <map key='[Total accidents 1 (table_02_14_121819 2.csv1)]' value='[table_02_14_121819 2.csv1].[Total accidents 1]' />
          <map key='[Total accidents 1]' value='[table_02_14_121819 2.csv].[Total accidents 1]' />
          <map key='[Total accidents, fatal (table_02_14_121819 2.csv1)]' value='[table_02_14_121819 2.csv1].[Total accidents, fatal]' />
          <map key='[Total accidents, fatal 1 (table_02_14_121819 2.csv1)]' value='[table_02_14_121819 2.csv1].[Total accidents, fatal 1]' />
          <map key='[Total accidents, fatal 1]' value='[table_02_14_121819 2.csv].[Total accidents, fatal 1]' />
          <map key='[Total accidents, fatal]' value='[table_02_14_121819 2.csv].[Total accidents, fatal]' />
          <map key='[Total accidents]' value='[table_02_14_121819 2.csv].[Total accidents]' />
          <map key='[Total fatalities (table_02_14_121819 2.csv1)]' value='[table_02_14_121819 2.csv1].[Total fatalities]' />
          <map key='[Total fatalities]' value='[table_02_14_121819 2.csv].[Total fatalities]' />
          <map key='[Total seriously injured persons (table_02_14_121819 2.csv1)]' value='[table_02_14_121819 2.csv1].[Total seriously injured persons]' />
          <map key='[Total seriously injured persons]' value='[table_02_14_121819 2.csv].[Total seriously injured persons]' />
          <map key='[Type]' value='[Airplane_Crashes_and_Fatalities_Since_1908.csv].[Type]' />
          <map key='[Vehicle Miles Traveled (Billions) (Cars_94-18.csv)]' value='[Cars_94-18.csv].[Vehicle Miles Traveled (Billions)]' />
          <map key='[Year (Airplane Fatalities by Year 1918-2019.csv)]' value='[Airplane Fatalities by Year 1918-2019.csv].[Year]' />
          <map key='[Year (Cars_94-18.csv)]' value='[Cars_94-18.csv].[Year]' />
          <map key='[Year (Page    2 Table  1)]' value='[Page    2 Table  1].[Year]' />
          <map key='[Year (table_02_14_121819 2.csv)]' value='[table_02_14_121819 2.csv].[Year]' />
          <map key='[Year (table_02_14_121819 2.csv1)]' value='[table_02_14_121819 2.csv1].[Year]' />
          <map key='[Year]' value='[Page    1 Table  1].[Year]' />
          <map key='[airline]' value='[airline-safety.csv].[airline]' />
          <map key='[avail_seat_km_per_week]' value='[airline-safety.csv].[avail_seat_km_per_week]' />
          <map key='[cn/In]' value='[Airplane_Crashes_and_Fatalities_Since_1908.csv].[cn/In]' />
          <map key='[fatal_accidents_00_14]' value='[airline-safety.csv].[fatal_accidents_00_14]' />
          <map key='[fatal_accidents_85_99]' value='[airline-safety.csv].[fatal_accidents_85_99]' />
          <map key='[fatalities_00_14]' value='[airline-safety.csv].[fatalities_00_14]' />
          <map key='[fatalities_85_99]' value='[airline-safety.csv].[fatalities_85_99]' />
          <map key='[incidents_00_14]' value='[airline-safety.csv].[incidents_00_14]' />
          <map key='[incidents_85_99]' value='[airline-safety.csv].[incidents_85_99]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Airplane Fatalities by Year 1918-2019.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Airplane_Crashes_and_Fatalities_Since_1908.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cars_94-18.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Page    1 Table  1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I48:no:A1:I48:4&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>362</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Page    2 Table  1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B44:no:A1:B44:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>86</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[table_02_14_121819 2.csv1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[table_02_14_121819 2.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airline</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airline]</local-name>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias>airline</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airline-safety.csv_E11D6FCB18FE489C8C8B666CDF0FC194]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avail_seat_km_per_week</remote-name>
            <remote-type>20</remote-type>
            <local-name>[avail_seat_km_per_week]</local-name>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias>avail_seat_km_per_week</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airline-safety.csv_E11D6FCB18FE489C8C8B666CDF0FC194]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incidents_85_99</remote-name>
            <remote-type>20</remote-type>
            <local-name>[incidents_85_99]</local-name>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias>incidents_85_99</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airline-safety.csv_E11D6FCB18FE489C8C8B666CDF0FC194]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fatal_accidents_85_99</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fatal_accidents_85_99]</local-name>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias>fatal_accidents_85_99</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airline-safety.csv_E11D6FCB18FE489C8C8B666CDF0FC194]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fatalities_85_99</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fatalities_85_99]</local-name>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias>fatalities_85_99</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airline-safety.csv_E11D6FCB18FE489C8C8B666CDF0FC194]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incidents_00_14</remote-name>
            <remote-type>20</remote-type>
            <local-name>[incidents_00_14]</local-name>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias>incidents_00_14</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airline-safety.csv_E11D6FCB18FE489C8C8B666CDF0FC194]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fatal_accidents_00_14</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fatal_accidents_00_14]</local-name>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias>fatal_accidents_00_14</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airline-safety.csv_E11D6FCB18FE489C8C8B666CDF0FC194]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fatalities_00_14</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fatalities_00_14]</local-name>
            <parent-name>[airline-safety.csv]</parent-name>
            <remote-alias>fatalities_00_14</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airline-safety.csv_E11D6FCB18FE489C8C8B666CDF0FC194]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank]</local-name>
            <parent-name>[Airplane Fatalities by Year 1918-2019.csv]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airplane Fatalities by Year 1918-2019.csv_3DFA6051762E4938B4D6E571FADA5276]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (Airplane Fatalities by Year 1918-2019.csv)]</local-name>
            <parent-name>[Airplane Fatalities by Year 1918-2019.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airplane Fatalities by Year 1918-2019.csv_3DFA6051762E4938B4D6E571FADA5276]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fatalities</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fatalities (Airplane Fatalities by Year 1918-2019.csv)]</local-name>
            <parent-name>[Airplane Fatalities by Year 1918-2019.csv]</parent-name>
            <remote-alias>Fatalities</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airplane Fatalities by Year 1918-2019.csv_3DFA6051762E4938B4D6E571FADA5276]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Airplane_Crashes_and_Fatalities_Since_1908.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>11</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airplane_Crashes_and_Fatalities_Since_1908.csv_F67CADF6A9324B9A9D00112F68DC6FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[Airplane_Crashes_and_Fatalities_Since_1908.csv]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>12</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airplane_Crashes_and_Fatalities_Since_1908.csv_F67CADF6A9324B9A9D00112F68DC6FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Airplane_Crashes_and_Fatalities_Since_1908.csv]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airplane_Crashes_and_Fatalities_Since_1908.csv_F67CADF6A9324B9A9D00112F68DC6FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Operator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Operator]</local-name>
            <parent-name>[Airplane_Crashes_and_Fatalities_Since_1908.csv]</parent-name>
            <remote-alias>Operator</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airplane_Crashes_and_Fatalities_Since_1908.csv_F67CADF6A9324B9A9D00112F68DC6FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flight #</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Flight #]</local-name>
            <parent-name>[Airplane_Crashes_and_Fatalities_Since_1908.csv]</parent-name>
            <remote-alias>Flight #</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airplane_Crashes_and_Fatalities_Since_1908.csv_F67CADF6A9324B9A9D00112F68DC6FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Route</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Route]</local-name>
            <parent-name>[Airplane_Crashes_and_Fatalities_Since_1908.csv]</parent-name>
            <remote-alias>Route</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airplane_Crashes_and_Fatalities_Since_1908.csv_F67CADF6A9324B9A9D00112F68DC6FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[Airplane_Crashes_and_Fatalities_Since_1908.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airplane_Crashes_and_Fatalities_Since_1908.csv_F67CADF6A9324B9A9D00112F68DC6FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Registration</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Registration]</local-name>
            <parent-name>[Airplane_Crashes_and_Fatalities_Since_1908.csv]</parent-name>
            <remote-alias>Registration</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airplane_Crashes_and_Fatalities_Since_1908.csv_F67CADF6A9324B9A9D00112F68DC6FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cn/In</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cn/In]</local-name>
            <parent-name>[Airplane_Crashes_and_Fatalities_Since_1908.csv]</parent-name>
            <remote-alias>cn/In</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airplane_Crashes_and_Fatalities_Since_1908.csv_F67CADF6A9324B9A9D00112F68DC6FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aboard</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Aboard]</local-name>
            <parent-name>[Airplane_Crashes_and_Fatalities_Since_1908.csv]</parent-name>
            <remote-alias>Aboard</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airplane_Crashes_and_Fatalities_Since_1908.csv_F67CADF6A9324B9A9D00112F68DC6FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fatalities</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fatalities]</local-name>
            <parent-name>[Airplane_Crashes_and_Fatalities_Since_1908.csv]</parent-name>
            <remote-alias>Fatalities</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airplane_Crashes_and_Fatalities_Since_1908.csv_F67CADF6A9324B9A9D00112F68DC6FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ground</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ground]</local-name>
            <parent-name>[Airplane_Crashes_and_Fatalities_Since_1908.csv]</parent-name>
            <remote-alias>Ground</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airplane_Crashes_and_Fatalities_Since_1908.csv_F67CADF6A9324B9A9D00112F68DC6FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Summary</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Summary]</local-name>
            <parent-name>[Airplane_Crashes_and_Fatalities_Since_1908.csv]</parent-name>
            <remote-alias>Summary</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Airplane_Crashes_and_Fatalities_Since_1908.csv_F67CADF6A9324B9A9D00112F68DC6FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (Cars_94-18.csv)]</local-name>
            <parent-name>[Cars_94-18.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cars_94-18.csv_9C92852257674DC290E07B6C46DDE5BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fatalities</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fatalities (Cars_94-18.csv)]</local-name>
            <parent-name>[Cars_94-18.csv]</parent-name>
            <remote-alias>Fatalities</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cars_94-18.csv_9C92852257674DC290E07B6C46DDE5BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Resident Population (Thousands)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Resident Population (Thousands) (Cars_94-18.csv)]</local-name>
            <parent-name>[Cars_94-18.csv]</parent-name>
            <remote-alias>Resident Population (Thousands)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cars_94-18.csv_9C92852257674DC290E07B6C46DDE5BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fatality Rate per 100,000 Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fatality Rate per 100,000 Population (Cars_94-18.csv)]</local-name>
            <parent-name>[Cars_94-18.csv]</parent-name>
            <remote-alias>Fatality Rate per 100,000 Population</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cars_94-18.csv_9C92852257674DC290E07B6C46DDE5BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Licensed Drivers (Thousands)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Licensed Drivers (Thousands) (Cars_94-18.csv)]</local-name>
            <parent-name>[Cars_94-18.csv]</parent-name>
            <remote-alias>Licensed Drivers (Thousands)</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cars_94-18.csv_9C92852257674DC290E07B6C46DDE5BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fatality Rate per 100,000 Licensed Drivers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fatality Rate per 100,000 Licensed Drivers (Cars_94-18.csv)]</local-name>
            <parent-name>[Cars_94-18.csv]</parent-name>
            <remote-alias>Fatality Rate per 100,000 Licensed Drivers</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cars_94-18.csv_9C92852257674DC290E07B6C46DDE5BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Registered Motor Vehicles (Thousands)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Registered Motor Vehicles (Thousands) (Cars_94-18.csv)]</local-name>
            <parent-name>[Cars_94-18.csv]</parent-name>
            <remote-alias>Registered Motor Vehicles (Thousands)</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cars_94-18.csv_9C92852257674DC290E07B6C46DDE5BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fatality Rate per 100,000 Registered Vehicles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fatality Rate per 100,000 Registered Vehicles (Cars_94-18.csv)]</local-name>
            <parent-name>[Cars_94-18.csv]</parent-name>
            <remote-alias>Fatality Rate per 100,000 Registered Vehicles</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cars_94-18.csv_9C92852257674DC290E07B6C46DDE5BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vehicle Miles Traveled (Billions)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Vehicle Miles Traveled (Billions) (Cars_94-18.csv)]</local-name>
            <parent-name>[Cars_94-18.csv]</parent-name>
            <remote-alias>Vehicle Miles Traveled (Billions)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cars_94-18.csv_9C92852257674DC290E07B6C46DDE5BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fatality Rate per 100 Million VMT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fatality Rate per 100 Million VMT (Cars_94-18.csv)]</local-name>
            <parent-name>[Cars_94-18.csv]</parent-name>
            <remote-alias>Fatality Rate per 100 Million VMT</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cars_94-18.csv_9C92852257674DC290E07B6C46DDE5BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Page    1 Table  1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Page    1 Table  1_68FB1A5B5E6B49AEA7897F9F3867C19A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Operating Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Operating Revenue]</local-name>
            <parent-name>[Page    1 Table  1]</parent-name>
            <remote-alias>Operating Revenue</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Page    1 Table  1_68FB1A5B5E6B49AEA7897F9F3867C19A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fuel Expense</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fuel Expense]</local-name>
            <parent-name>[Page    1 Table  1]</parent-name>
            <remote-alias>Fuel Expense</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Page    1 Table  1_68FB1A5B5E6B49AEA7897F9F3867C19A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Labor Expense</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Labor Expense]</local-name>
            <parent-name>[Page    1 Table  1]</parent-name>
            <remote-alias>Labor Expense</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Page    1 Table  1_68FB1A5B5E6B49AEA7897F9F3867C19A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other Expense*</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Other Expense*]</local-name>
            <parent-name>[Page    1 Table  1]</parent-name>
            <remote-alias>Other Expense*</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Page    1 Table  1_68FB1A5B5E6B49AEA7897F9F3867C19A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Operating Expense</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Operating Expense]</local-name>
            <parent-name>[Page    1 Table  1]</parent-name>
            <remote-alias>Operating Expense</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Page    1 Table  1_68FB1A5B5E6B49AEA7897F9F3867C19A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Operating Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Operating Profit]</local-name>
            <parent-name>[Page    1 Table  1]</parent-name>
            <remote-alias>Operating Profit</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Page    1 Table  1_68FB1A5B5E6B49AEA7897F9F3867C19A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pre-Tax Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pre-Tax Profit]</local-name>
            <parent-name>[Page    1 Table  1]</parent-name>
            <remote-alias>Pre-Tax Profit</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Page    1 Table  1_68FB1A5B5E6B49AEA7897F9F3867C19A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net&#9;Profi</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Net&#9;Profi]</local-name>
            <parent-name>[Page    1 Table  1]</parent-name>
            <remote-alias>Net&#9;Profi</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Page    1 Table  1_68FB1A5B5E6B49AEA7897F9F3867C19A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (Page    2 Table  1)]</local-name>
            <parent-name>[Page    2 Table  1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Page    2 Table  1_FEE34D7DD51A4E13B3B1F05E2AD37BBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net&#9;Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Net&#9;Profit]</local-name>
            <parent-name>[Page    2 Table  1]</parent-name>
            <remote-alias>Net&#9;Profit</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Page    2 Table  1_FEE34D7DD51A4E13B3B1F05E2AD37BBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (table_02_14_121819 2.csv1)]</local-name>
            <parent-name>[table_02_14_121819 2.csv1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[table_02_14_121819 2.csv_E6A5920E08254DBDBA5AD1A344D92D34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total fatalities</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total fatalities (table_02_14_121819 2.csv1)]</local-name>
            <parent-name>[table_02_14_121819 2.csv1]</parent-name>
            <remote-alias>Total fatalities</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[table_02_14_121819 2.csv_E6A5920E08254DBDBA5AD1A344D92D34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total seriously injured persons</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total seriously injured persons (table_02_14_121819 2.csv1)]</local-name>
            <parent-name>[table_02_14_121819 2.csv1]</parent-name>
            <remote-alias>Total seriously injured persons</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[table_02_14_121819 2.csv_E6A5920E08254DBDBA5AD1A344D92D34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total accidents</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total accidents (table_02_14_121819 2.csv1)]</local-name>
            <parent-name>[table_02_14_121819 2.csv1]</parent-name>
            <remote-alias>Total accidents</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[table_02_14_121819 2.csv_E6A5920E08254DBDBA5AD1A344D92D34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total accidents, fatal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total accidents, fatal (table_02_14_121819 2.csv1)]</local-name>
            <parent-name>[table_02_14_121819 2.csv1]</parent-name>
            <remote-alias>Total accidents, fatal</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[table_02_14_121819 2.csv_E6A5920E08254DBDBA5AD1A344D92D34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flight hours (thousands)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Flight hours (thousands) (table_02_14_121819 2.csv1)]</local-name>
            <parent-name>[table_02_14_121819 2.csv1]</parent-name>
            <remote-alias>Flight hours (thousands)</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[table_02_14_121819 2.csv_E6A5920E08254DBDBA5AD1A344D92D34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fatalities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fatalities (table_02_14_121819 2.csv1)]</local-name>
            <parent-name>[table_02_14_121819 2.csv1]</parent-name>
            <remote-alias>Fatalities</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[table_02_14_121819 2.csv_E6A5920E08254DBDBA5AD1A344D92D34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Seriously injured persons </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Seriously injured persons  (table_02_14_121819 2.csv1)]</local-name>
            <parent-name>[table_02_14_121819 2.csv1]</parent-name>
            <remote-alias>Seriously injured persons </remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[table_02_14_121819 2.csv_E6A5920E08254DBDBA5AD1A344D92D34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total accidents 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total accidents 1 (table_02_14_121819 2.csv1)]</local-name>
            <parent-name>[table_02_14_121819 2.csv1]</parent-name>
            <remote-alias>Total accidents 1</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[table_02_14_121819 2.csv_E6A5920E08254DBDBA5AD1A344D92D34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total accidents, fatal 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total accidents, fatal 1 (table_02_14_121819 2.csv1)]</local-name>
            <parent-name>[table_02_14_121819 2.csv1]</parent-name>
            <remote-alias>Total accidents, fatal 1</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[table_02_14_121819 2.csv_E6A5920E08254DBDBA5AD1A344D92D34]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (table_02_14_121819 2.csv)]</local-name>
            <parent-name>[table_02_14_121819 2.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[table_02_14_121819 2.csv_F951B9021F2144FD81A4FB065FE491F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total fatalities</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total fatalities]</local-name>
            <parent-name>[table_02_14_121819 2.csv]</parent-name>
            <remote-alias>Total fatalities</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[table_02_14_121819 2.csv_F951B9021F2144FD81A4FB065FE491F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total seriously injured persons</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total seriously injured persons]</local-name>
            <parent-name>[table_02_14_121819 2.csv]</parent-name>
            <remote-alias>Total seriously injured persons</remote-alias>
            <ordinal>57</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[table_02_14_121819 2.csv_F951B9021F2144FD81A4FB065FE491F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total accidents</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total accidents]</local-name>
            <parent-name>[table_02_14_121819 2.csv]</parent-name>
            <remote-alias>Total accidents</remote-alias>
            <ordinal>58</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[table_02_14_121819 2.csv_F951B9021F2144FD81A4FB065FE491F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total accidents, fatal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total accidents, fatal]</local-name>
            <parent-name>[table_02_14_121819 2.csv]</parent-name>
            <remote-alias>Total accidents, fatal</remote-alias>
            <ordinal>59</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[table_02_14_121819 2.csv_F951B9021F2144FD81A4FB065FE491F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flight hours (thousands)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Flight hours (thousands)]</local-name>
            <parent-name>[table_02_14_121819 2.csv]</parent-name>
            <remote-alias>Flight hours (thousands)</remote-alias>
            <ordinal>60</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[table_02_14_121819 2.csv_F951B9021F2144FD81A4FB065FE491F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fatalities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fatalities (table_02_14_121819 2.csv)]</local-name>
            <parent-name>[table_02_14_121819 2.csv]</parent-name>
            <remote-alias>Fatalities</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[table_02_14_121819 2.csv_F951B9021F2144FD81A4FB065FE491F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Seriously injured persons </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Seriously injured persons ]</local-name>
            <parent-name>[table_02_14_121819 2.csv]</parent-name>
            <remote-alias>Seriously injured persons </remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[table_02_14_121819 2.csv_F951B9021F2144FD81A4FB065FE491F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total accidents 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total accidents 1]</local-name>
            <parent-name>[table_02_14_121819 2.csv]</parent-name>
            <remote-alias>Total accidents 1</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[table_02_14_121819 2.csv_F951B9021F2144FD81A4FB065FE491F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total accidents, fatal 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total accidents, fatal 1]</local-name>
            <parent-name>[table_02_14_121819 2.csv]</parent-name>
            <remote-alias>Total accidents, fatal 1</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[table_02_14_121819 2.csv_F951B9021F2144FD81A4FB065FE491F6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatalities (Airplane Fatalities by Year 1918-2019.csv):qk]&quot;' value='Airplane' />
          <alias key='&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatalities (Cars_94-18.csv):qk]&quot;' value='Car' />
          <alias key='&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[usr:Calculation_4200802947241590789:qk]&quot;' value='Cars' />
          <alias key='&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[usr:Total Percent Car (copy)_4200802947242176518:qk]&quot;' value='Airplanes' />
        </aliases>
      </column>
      <column datatype='integer' name='[Aboard]' role='measure' type='quantitative' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Total accidents, fatal]) / TOTAL(SUM([Total accidents, fatal]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN(SUM([Total accidents])) - LOOKUP(ZN(SUM([Total accidents])), -1)) / ABS(LOOKUP(ZN(SUM([Total accidents])), -1))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Total Percent Car' datatype='real' default-format='p0%' name='[Calculation_4200802947241590789]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Fatalities (Cars_94-18.csv)])/(Sum([Fatalities (Airplane Fatalities by Year 1918-2019.csv)]) + Sum([Fatalities (Cars_94-18.csv)]))' />
      </column>
      <column caption='Calculation3' datatype='real' name='[Calculation_83949951753809920]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Year (Cars_94-18.csv)]: 100 * AVG([Fatalities (Cars_94-18.csv)] - [Total fatalities] / [Total fatalities])}' />
      </column>
      <column caption='Country (copy)' datatype='string' name='[Country (copy)_4200802949705719819]' role='dimension' semantic-role='[State].[Name]' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[Location]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Location], &quot;,&quot;, 2 ) )' />
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Alaksa&quot;' value='&quot;Alaska&quot;' />
          <semantic-value key='&quot;CA&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;Calilfornia&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;GA&quot;' value='&quot;Georgia&quot;' />
          <semantic-value key='&quot;Georgia&quot;' value='&quot;Georgia&quot;' />
          <semantic-value key='&quot;Kauai&quot;' value='&quot;Hawaii&quot;' />
          <semantic-value key='&quot;Massachusetts&quot;' value='&quot;Massachusetts&quot;' />
          <semantic-value key='&quot;Miami&quot;' value='&quot;Florida&quot;' />
          <semantic-value key='&quot;Michigan&quot;' value='&quot;Michigan&quot;' />
          <semantic-value key='&quot;Nevada&quot;' value='&quot;Nevada&quot;' />
          <semantic-value key='&quot;New Hampshire&quot;' value='&quot;New Hampshire&quot;' />
          <semantic-value key='&quot;Queens&quot;' value='&quot;New York&quot;' />
          <semantic-value key='&quot;San Vincente&quot;' value='&quot;California&quot;' />
          <semantic-value key='&quot;Tennesee&quot;' value='&quot;Tennessee&quot;' />
          <semantic-value key='&quot;Washington&quot;' value='&quot;Washington&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Fatalities (Airplane Fatalities by Year 1918-2019.csv)]' role='measure' type='quantitative' />
      <column caption='Fatalities (Cars 94-18.csv)' datatype='integer' name='[Fatalities (Cars_94-18.csv)]' role='measure' type='quantitative' />
      <column caption='Fatalities (table 02 14 121819 2.csv)' datatype='real' name='[Fatalities (table_02_14_121819 2.csv)]' role='measure' type='quantitative' />
      <column caption='Fatalities (table 02 14 121819 2.csv1)' datatype='real' name='[Fatalities (table_02_14_121819 2.csv1)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Fatalities]' role='measure' type='quantitative' />
      <column caption='Fatality Rate per 100 Million VMT (Cars 94-18.csv)' datatype='real' name='[Fatality Rate per 100 Million VMT (Cars_94-18.csv)]' role='measure' type='quantitative' />
      <column caption='Fatality Rate per 100,000 Licensed Drivers (Cars 94-18.csv)' datatype='real' name='[Fatality Rate per 100,000 Licensed Drivers (Cars_94-18.csv)]' role='measure' type='quantitative' />
      <column caption='Fatality Rate per 100,000 Population (Cars 94-18.csv)' datatype='real' name='[Fatality Rate per 100,000 Population (Cars_94-18.csv)]' role='measure' type='quantitative' />
      <column caption='Fatality Rate per 100,000 Registered Vehicles (Cars 94-18.csv)' datatype='real' name='[Fatality Rate per 100,000 Registered Vehicles (Cars_94-18.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Flight #]' role='measure' type='quantitative' />
      <column caption='Flight hours (thousands) (table 02 14 121819 2.csv1)' datatype='integer' name='[Flight hours (thousands) (table_02_14_121819 2.csv1)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Flight hours (thousands)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Fuel Expense]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Ground]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Labor Expense]' role='measure' type='quantitative' />
      <column caption='Licensed Drivers (Thousands) (Cars 94-18.csv)' datatype='integer' name='[Licensed Drivers (Thousands) (Cars_94-18.csv)]' role='measure' type='quantitative' />
      <column caption='Location - Split 1' datatype='string' name='[Location - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[Location]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Location], &quot;,&quot;, 1 ) )' />
      </column>
      <column caption='Country' datatype='string' name='[Location - Split 2]' role='dimension' semantic-role='[Country].[Name]' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[Location]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Location], &quot;,&quot;, 2 ) )' />
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Afghanstan&quot;' value='&quot;Afghanistan&quot;' />
          <semantic-value key='&quot;Africa&quot;' value='&quot;South Africa&quot;' />
          <semantic-value key='&quot;Aichi&quot;' value='&quot;Japan&quot;' />
          <semantic-value key='&quot;Alabama&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Alaksa&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Alaska&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Alberta&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;Amapa&quot;' value='&quot;Brazil&quot;' />
          <semantic-value key='&quot;Arizona&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Arkansas&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Azores&quot;' value='&quot;Portugal&quot;' />
          <semantic-value key='&quot;Azores (Portugal)&quot;' value='&quot;Portugal&quot;' />
          <semantic-value key='&quot;Beni&quot;' value='&quot;Democratic Republic of Congo&quot;' />
          <semantic-value key='&quot;British Colombia&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;British Columbia&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;California&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Calilfornia&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Catalina Island&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Chechnya&quot;' value='&quot;Russia&quot;' />
          <semantic-value key='&quot;Colorado&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Comoros Islands&quot;' value='&quot;Mozambique&quot;' />
          <semantic-value key='&quot;Connecticut&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;DemocratiRepubliCogo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
          <semantic-value key='&quot;DemocratiRepubliCongo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
          <semantic-value key='&quot;DemocratiRepubliof Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
          <semantic-value key='&quot;DemoctratiRepubliCongo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
          <semantic-value key='&quot;Domincan Republic&quot;' value='&quot;Dominican Republic&quot;' />
          <semantic-value key='&quot;England&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Florida&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Hati&quot;' value='&quot;Haiti&quot;' />
          <semantic-value key='&quot;Hawaii&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Idaho&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Illinois&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;India / Kandahar&quot;' value='&quot;India&quot;' />
          <semantic-value key='&quot;Indiana&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Inner Mongolia&quot;' value='&quot;Mongolia&quot;' />
          <semantic-value key='&quot;Inodnesia&quot;' value='&quot;Indonesia&quot;' />
          <semantic-value key='&quot;Iowa&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Kansas&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Kauai&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Kentucky&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Kirghizia&quot;' value='&quot;Kyrgyzstan&quot;' />
          <semantic-value key='&quot;Maine&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Manatoba&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;Manitoba&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;Manmar&quot;' value='&quot;Myanmar&quot;' />
          <semantic-value key='&quot;Maryland&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Massachusetts&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Miami&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Michigan&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Minnesota&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Missouri&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Montana&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Morroco&quot;' value='&quot;Morocco&quot;' />
          <semantic-value key='&quot;Napal&quot;' value='&quot;Nepal&quot;' />
          <semantic-value key='&quot;near Natanz&quot;' value='&quot;Iran&quot;' />
          <semantic-value key='&quot;near PacifiGrove&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Nevada&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;New Brunswick&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;New Guinea&quot;' value='&quot;Papua New Guinea&quot;' />
          <semantic-value key='&quot;New Hampshire&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;New Jersey&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;New Mexico&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;New York&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Newfoundland&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;Norfork&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;North Carolina&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;North Dakota&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Northwest Territories&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;Nova Scotia&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;off Angola&quot;' value='&quot;Angola&quot;' />
          <semantic-value key='&quot;off Pelee Island&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;Ohio&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Ontario&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;Papua&quot;' value='&quot;Papua New Guinea&quot;' />
          <semantic-value key='&quot;Para&quot;' value='&quot;Paraguay&quot;' />
          <semantic-value key='&quot;Pennsylvania&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Providencia Island&quot;' value='&quot;Colombia&quot;' />
          <semantic-value key='&quot;Quebec&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;Queens&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Queensland&quot;' value='&quot;Australia&quot;' />
          <semantic-value key='&quot;Queensland  Australia&quot;' value='&quot;Australia&quot;' />
          <semantic-value key='&quot;Republiof Djibouti&quot;' value='&quot;Djibouti&quot;' />
          <semantic-value key='&quot;Republiof Georgia&quot;' value='&quot;Georgia&quot;' />
          <semantic-value key='&quot;Rhode Island&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Rio de Janeiro&quot;' value='&quot;Brazil&quot;' />
          <semantic-value key='&quot;San Vincente&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Sao Paulo&quot;' value='&quot;Brazil&quot;' />
          <semantic-value key='&quot;Saskatchewan&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;Scotland&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Siberia&quot;' value='&quot;Russia&quot;' />
          <semantic-value key='&quot;South Carolina&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;South Dakota&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Tasmania&quot;' value='&quot;Australia&quot;' />
          <semantic-value key='&quot;Tennesee&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Tennessee&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Texas&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Trento&quot;' value='&quot;Italy&quot;' />
          <semantic-value key='&quot;Turks &amp; Caicos Islands&quot;' value='&quot;Turks and Caicos Islands&quot;' />
          <semantic-value key='&quot;Utah&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Valle del Cauca&quot;' value='&quot;Colombia&quot;' />
          <semantic-value key='&quot;Vermont&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Virginia&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Virginia.&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Washington&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Wisconsin&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Wisconson&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Wyoming&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Yugosalvia&quot;' value='&quot;Montenegro&quot;' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;570 miles northeast of Natal&quot;' value='-5.7999999999999998' />
          <semantic-value key='&quot;Black Sea&quot;' value='43.412999999999997' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;570 miles northeast of Natal&quot;' value='-35.299999999999997' />
          <semantic-value key='&quot;Black Sea&quot;' value='34.299300000000002' />
        </semantic-values>
      </column>
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Abakan, Siberia, Russia&quot;' value='&quot;Russia&quot;' />
          <semantic-value key='&quot;Abéché, Chad&quot;' value='&quot;Chad&quot;' />
          <semantic-value key='&quot;Aberdeen, South Dakota&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Abuja, Nigeria&quot;' value='&quot;Nigeria&quot;' />
          <semantic-value key='&quot;Accra, Ghana&quot;' value='&quot;Ghana&quot;' />
          <semantic-value key='&quot;Adar Yeil, Sudan&quot;' value='&quot;Sudan&quot;' />
          <semantic-value key='&quot;Agana, Guam&quot;' value='&quot;Guam&quot;' />
          <semantic-value key='&quot;Alamosa, Colorado&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Algiers Airport, Algeria&quot;' value='&quot;Algeria&quot;' />
          <semantic-value key='&quot;Alice Springs, Australia&quot;' value='&quot;Australia&quot;' />
          <semantic-value key='&quot;Alma, Wisconsin&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Alsworth, Alaska&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Alto da Boa Vista, Brazil&quot;' value='&quot;Brazil&quot;' />
          <semantic-value key='&quot;Ambato, Ecuador&quot;' value='&quot;Ecuador&quot;' />
          <semantic-value key='&quot;Amritsar, India / Kandahar, Afghanistan&quot;' value='&quot;India&quot;' />
          <semantic-value key='&quot;Amsterdam, Netherlands&quot;' value='&quot;Netherlands&quot;' />
          <semantic-value key='&quot;Anchor Point, Alaska&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Anchorage, Alaska&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Andoas, Peru&quot;' value='&quot;Peru&quot;' />
          <semantic-value key='&quot;Anjouan, Comoros Islands&quot;' value='&quot;Comoros&quot;' />
          <semantic-value key='&quot;Arequipa, Peru&quot;' value='&quot;Peru&quot;' />
          <semantic-value key='&quot;Arlington, Virginia.&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Aru, DemocratiRepubliCogo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
          <semantic-value key='&quot;Ashbaubenon, Wisconsin&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Asmara, Eritrea&quot;' value='&quot;Eritrea&quot;' />
          <semantic-value key='&quot;Asuncion, Paraguay&quot;' value='&quot;Paraguay&quot;' />
          <semantic-value key='&quot;Atlanta, Georgia&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Aubusson, France&quot;' value='&quot;France&quot;' />
          <semantic-value key='&quot;Aurora, Illinois&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Avenal, California&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Bacolod, Philippines&quot;' value='&quot;Philippines&quot;' />
          <semantic-value key='&quot;Bagasin, Papua New Guinea&quot;' value='&quot;Papua New Guinea&quot;' />
          <semantic-value key='&quot;Bahia Negra, Paraguay&quot;' value='&quot;Paraguay&quot;' />
          <semantic-value key='&quot;Baie-Comeau, Canada&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;Baku, Azerbaijan&quot;' value='&quot;Azerbaijan&quot;' />
          <semantic-value key='&quot;Bandung, Indonesia&quot;' value='&quot;Indonesia&quot;' />
          <semantic-value key='&quot;Baney, Equatorial Guinea&quot;' value='&quot;Equatorial Guinea&quot;' />
          <semantic-value key='&quot;Bangkok, Thailand&quot;' value='&quot;Thailand&quot;' />
          <semantic-value key='&quot;Bangui, Central African Republic&quot;' value='&quot;Central African Republic&quot;' />
          <semantic-value key='&quot;Banjarmasin, Indonesia&quot;' value='&quot;Indonesia&quot;' />
          <semantic-value key='&quot;Banjul, Gambia&quot;' value='&quot;Gambia&quot;' />
          <semantic-value key='&quot;Bannang Sata, Thailand&quot;' value='&quot;Thailand&quot;' />
          <semantic-value key='&quot;Baotou, Inner Mongolia, China&quot;' value='&quot;China&quot;' />
          <semantic-value key='&quot;Bapi, Papua New Guinea&quot;' value='&quot;Papua New Guinea&quot;' />
          <semantic-value key='&quot;Barcelona, Spain&quot;' value='&quot;Spain&quot;' />
          <semantic-value key='&quot;Barskoon, Kirghizia&quot;' value='&quot;Kyrgyzstan&quot;' />
          <semantic-value key='&quot;Batagaj, Russia&quot;' value='&quot;Russia&quot;' />
          <semantic-value key='&quot;Baucau, East Timor&quot;' value='&quot;Timor Leste&quot;' />
          <semantic-value key='&quot;Bayfield, Colorado&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Beaver Dam, Arizona&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Beaver Island, Minnesota&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Bejuma, Venezuela&quot;' value='&quot;Venezuela&quot;' />
          <semantic-value key='&quot;Belelm, Brazil&quot;' value='&quot;Brazil&quot;' />
          <semantic-value key='&quot;Belem, Para, Brazil&quot;' value='&quot;Brazil&quot;' />
          <semantic-value key='&quot;Belgrade, Montana&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Belgrade, Yugosalvia&quot;' value='&quot;Kosovo&quot;' />
          <semantic-value key='&quot;Belle Harbor, Queens, New York&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Bellevue, Idaho&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Belo Horizonte, Brazil&quot;' value='&quot;Brazil&quot;' />
          <semantic-value key='&quot;Bessemer, Alabama&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Bethel, Alaska&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Bethel, Arkansas&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Between Kibo &amp; Mawenzi Peaks of Mt. Kilimanjaroi, Tanzania&quot;' value='&quot;Tanzania&quot;' />
          <semantic-value key='&quot;Bilbao, Spain&quot;' value='&quot;Spain&quot;' />
          <semantic-value key='&quot;Billings, Montana&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Bimin, Papua, New Guinea&quot;' value='&quot;Papua New Guinea&quot;' />
          <semantic-value key='&quot;Bintuni,  Indonesia&quot;' value='&quot;Indonesia&quot;' />
          <semantic-value key='&quot;Birchwil, Switzerland&quot;' value='&quot;Switzerland&quot;' />
          <semantic-value key='&quot;Birmingham, England&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Bishkek, Kyrgyzstan&quot;' value='&quot;Kyrgyzstan&quot;' />
          <semantic-value key='&quot;Bismark, North Dakota&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Bitonja, Bosnia-Herzegovina&quot;' value='&quot;Bosnia and Herzegovina&quot;' />
          <semantic-value key='&quot;Blace, Macedonia&quot;' value='&quot;North Macedonia&quot;' />
          <semantic-value key='&quot;Blida, Algeria&quot;' value='&quot;Algeria&quot;' />
          <semantic-value key='&quot;Bluefields, Nicaragua&quot;' value='&quot;Nicaragua&quot;' />
          <semantic-value key='&quot;Blyn, Washington&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Boca Raton, Florida&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Boende, Congo&quot;' value='&quot;Congo&quot;' />
          <semantic-value key='&quot;Boise, Idaho&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Bolchaïa Pyssa, Russia&quot;' value='&quot;Russia&quot;' />
          <semantic-value key='&quot;Boma, DemocratiRepubliCongo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
          <semantic-value key='&quot;Bozoy, Kazakhstan&quot;' value='&quot;Kazakhstan&quot;' />
          <semantic-value key='&quot;Brazzaville, DemocratiRepubliCongo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
          <semantic-value key='&quot;Bremerhaven, Germany&quot;' value='&quot;Germany&quot;' />
          <semantic-value key='&quot;Bridgeton, Missouri&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Brno, Czech Republic&quot;' value='&quot;Czechia&quot;' />
          <semantic-value key='&quot;Buah Nabar, Indonesia&quot;' value='&quot;Indonesia&quot;' />
          <semantic-value key='&quot;Bucharest, Romania&quot;' value='&quot;Romania&quot;' />
          <semantic-value key='&quot;Buenos Aires, Argentina&quot;' value='&quot;Argentina&quot;' />
          <semantic-value key='&quot;Buenos Aires, Brazil&quot;' value='&quot;Brazil&quot;' />
          <semantic-value key='&quot;Bukalaza, Uganda&quot;' value='&quot;Uganda&quot;' />
          <semantic-value key='&quot;Bukavu, DemocratiRepubliCongo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
          <semantic-value key='&quot;Bundeena, Australia&quot;' value='&quot;Australia&quot;' />
          <semantic-value key='&quot;Burbank, Calilfornia&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Burlington Township, New Jersey&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Busan, South Korea&quot;' value='&quot;South Korea&quot;' />
          <semantic-value key='&quot;Busia, Kenya&quot;' value='&quot;Kenya&quot;' />
          <semantic-value key='&quot;Butte, Montana&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Byers, Colorado&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Cagliari, Italy&quot;' value='&quot;Italy&quot;' />
          <semantic-value key='&quot;Caguas, Puerto Rico&quot;' value='&quot;Puerto Rico&quot;' />
          <semantic-value key='&quot;Cajon Pass, California&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Calabar , Nigeria&quot;' value='&quot;Nigeria&quot;' />
          <semantic-value key='&quot;Camp Springs, Maryland&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Campbell River, British Columbia, Canada&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;Canaima National Park, Venezuela&quot;' value='&quot;Venezuela&quot;' />
          <semantic-value key='&quot;Cap Haitien, Haiti&quot;' value='&quot;Haiti&quot;' />
          <semantic-value key='&quot;Caracas, Venezuela&quot;' value='&quot;Venezuela&quot;' />
          <semantic-value key='&quot;Carajas, Brazil&quot;' value='&quot;Brazil&quot;' />
          <semantic-value key='&quot;Carepa, Colombia&quot;' value='&quot;Colombia&quot;' />
          <semantic-value key='&quot;Cartagena, Colombia&quot;' value='&quot;Colombia&quot;' />
          <semantic-value key='&quot;Cerro Aicha, Venezuela&quot;' value='&quot;Venezuela&quot;' />
          <semantic-value key='&quot;Cerro San Jeronimo, Colombia&quot;' value='&quot;Colombia&quot;' />
          <semantic-value key='&quot;Chaibukha, Russia&quot;' value='&quot;Russia&quot;' />
          <semantic-value key='&quot;Chanco, Chile&quot;' value='&quot;Chile&quot;' />
          <semantic-value key='&quot;Chantilly, Virginia&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Charllis, Idaho&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Charlotte, North Carolina&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Cheju, South Korea&quot;' value='&quot;South Korea&quot;' />
          <semantic-value key='&quot;Cherkessk, Russia&quot;' value='&quot;Russia&quot;' />
          <semantic-value key='&quot;Cheyenne, Wyoming&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Chicago, Illinois&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Chilpancingo, Mexico&quot;' value='&quot;Mexico&quot;' />
          <semantic-value key='&quot;Chimanta mountains, Venezuela&quot;' value='&quot;Venezuela&quot;' />
          <semantic-value key='&quot;Chrallave, Venezuela&quot;' value='&quot;Venezuela&quot;' />
          <semantic-value key='&quot;Chrisinau, Moldova&quot;' value='&quot;Moldova&quot;' />
          <semantic-value key='&quot;Christchurch, New Zealand&quot;' value='&quot;New Zealand&quot;' />
          <semantic-value key='&quot;Cincinnati, Ohio&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Ciudad Bolivar, Venezuela&quot;' value='&quot;Venezuela&quot;' />
          <semantic-value key='&quot;Clarence Center, New York&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Coconut Island, QLD, Australia&quot;' value='&quot;Australia&quot;' />
          <semantic-value key='&quot;Cody, Wyoming&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Colon, Panama&quot;' value='&quot;Panama&quot;' />
          <semantic-value key='&quot;Columbia, South Carolina&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Columbus, Ohio&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Connemara, Ireland&quot;' value='&quot;Ireland&quot;' />
          <semantic-value key='&quot;Córdoba, Argentina&quot;' value='&quot;Argentina&quot;' />
          <semantic-value key='&quot;Cordoba, Spain&quot;' value='&quot;Spain&quot;' />
          <semantic-value key='&quot;Coron Island, Philippines&quot;' value='&quot;Philippines&quot;' />
          <semantic-value key='&quot;Coron, Philippines&quot;' value='&quot;Philippines&quot;' />
          <semantic-value key='&quot;Cotonou, Benin&quot;' value='&quot;Benin&quot;' />
          <semantic-value key='&quot;Coventry, England&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Criciúma, Brazil&quot;' value='&quot;Brazil&quot;' />
          <semantic-value key='&quot;Cubatao, Brazil&quot;' value='&quot;Brazil&quot;' />
          <semantic-value key='&quot;Cuenca, Ecuador&quot;' value='&quot;Ecuador&quot;' />
          <semantic-value key='&quot;Cuiaba, Brazil&quot;' value='&quot;Brazil&quot;' />
          <semantic-value key='&quot;Culiacan, Mexico&quot;' value='&quot;Mexico&quot;' />
          <semantic-value key='&quot;Curitiba, Brazil&quot;' value='&quot;Brazil&quot;' />
          <semantic-value key='&quot;Dalang, Sudan&quot;' value='&quot;Sudan&quot;' />
          <semantic-value key='&quot;Davis Inlet, Newfoundland, Canada&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;Decatur Island, Washington&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Del Rio, Texas&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Dhahran, Saudi Arabia&quot;' value='&quot;Saudi Arabia&quot;' />
          <semantic-value key='&quot;Dillingham, Alaska&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Diyarbakir, Turkey&quot;' value='&quot;Turkey&quot;' />
          <semantic-value key='&quot;Dorchester, New Hampshire&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;East Bay Cay, Turks &amp; Caicos Islands&quot;' value='&quot;Turks and Caicos Islands&quot;' />
          <semantic-value key='&quot;East Kalimantan, Indonesia&quot;' value='&quot;Indonesia&quot;' />
          <semantic-value key='&quot;East Midlands, England&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Edenton, North Carolina&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Edgewater, Maryland&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Eel River Crossing, New Brunswick, Canada&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;Eider Point, Alaska&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;El Embrujo, Providencia Island, Colombia&quot;' value='&quot;Colombia&quot;' />
          <semantic-value key='&quot;El Junquito, Venezuela&quot;' value='&quot;Venezuela&quot;' />
          <semantic-value key='&quot;El Portezulo, Argentina&quot;' value='&quot;Argentina&quot;' />
          <semantic-value key='&quot;El Yopal, Colombia&quot;' value='&quot;Colombia&quot;' />
          <semantic-value key='&quot;El Zapotal, Guatemala&quot;' value='&quot;Guatemala&quot;' />
          <semantic-value key='&quot;Elim, Alaksa&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Ellsworth AFB, South Dakota&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Enarotali, Indonesia&quot;' value='&quot;Indonesia&quot;' />
          <semantic-value key='&quot;Ennadai Lake, Canada&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;Eveleth, Minnesota&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Everglades, Miami, Florida&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Fallujah, Iraq&quot;' value='&quot;Iraq&quot;' />
          <semantic-value key='&quot;Fazenda Nossa Senhora de Lourdes, Brazil&quot;' value='&quot;Brazil&quot;' />
          <semantic-value key='&quot;Ferguson, Kentucky&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Fish Egg Inlet, Canada&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;Flagstaff, Arizona&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Florence, Italy&quot;' value='&quot;Italy&quot;' />
          <semantic-value key='&quot;Fort Wayne, Indiana&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Fortaleza, Brazil&quot;' value='&quot;Brazil&quot;' />
          <semantic-value key='&quot;Fotina, Greece&quot;' value='&quot;Greece&quot;' />
          <semantic-value key='&quot;Foveaux Strait, New Zealand&quot;' value='&quot;New Zealand&quot;' />
          <semantic-value key='&quot;Freetown, Sierra Leone&quot;' value='&quot;Sierra Leone&quot;' />
          <semantic-value key='&quot;Fukuoka, Japan&quot;' value='&quot;Japan&quot;' />
          <semantic-value key='&quot;Gaspé, Quebec, Canada&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;Geilenkirchen, Germany&quot;' value='&quot;Germany&quot;' />
          <semantic-value key='&quot;Genoa, Italy&quot;' value='&quot;Italy&quot;' />
          <semantic-value key='&quot;George, South Africa&quot;' value='&quot;South Africa&quot;' />
          <semantic-value key='&quot;Geti, DemocratiRepubliCongo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
          <semantic-value key='&quot;Ghardaïa, Algeria&quot;' value='&quot;Algeria&quot;' />
          <semantic-value key='&quot;Glasgow, Scotland&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Gohu Airstrip, Papua New Guinea&quot;' value='&quot;Papua New Guinea&quot;' />
          <semantic-value key='&quot;Goma, Congo&quot;' value='&quot;Congo&quot;' />
          <semantic-value key='&quot;Goma, DemocratiRepubliCongo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
          <semantic-value key='&quot;Gonesse, France&quot;' value='&quot;France&quot;' />
          <semantic-value key='&quot;Goroka,  New Guinea&quot;' value='&quot;Papua New Guinea&quot;' />
          <semantic-value key='&quot;Goroka, Papua New Guinea&quot;' value='&quot;Papua New Guinea&quot;' />
          <semantic-value key='&quot;Great Falls, Montana&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Great Hallingbury, United Kingdom&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Griesta, United Kingdom&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Griffin, Georgia&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Groton, Connecticut&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Guatemala City, Guatemala&quot;' value='&quot;Guatemala&quot;' />
          <semantic-value key='&quot;Guernsey, Channel Islands, England&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Gumey, Papua New Guinea&quot;' value='&quot;Papua New Guinea&quot;' />
          <semantic-value key='&quot;Gunung Antara, Indonesia&quot;' value='&quot;Indonesia&quot;' />
          <semantic-value key='&quot;Gustavia, St. Barthélémy, French West Indies&quot;' value='&quot;French Guiana&quot;' />
          <semantic-value key='&quot;Gyandzha, Azerbaijan&quot;' value='&quot;Azerbaijan&quot;' />
          <semantic-value key='&quot;Haena, Hawaii&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Haines, Alaska&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Halifax, Nova Scotia, Canada&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;Hamburg, Germany&quot;' value='&quot;Germany&quot;' />
          <semantic-value key='&quot;Hamilton Island, QLD, Australia&quot;' value='&quot;Australia&quot;' />
          <semantic-value key='&quot;Hanalei, Hawaii&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Hanea, Kauai, Hawaii&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Helendale, California&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Herputchi, Russia&quot;' value='&quot;Russia&quot;' />
          <semantic-value key='&quot;Herreira, Spain&quot;' value='&quot;Spain&quot;' />
          <semantic-value key='&quot;High Prarie, Alberta, Canada&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;Hillsboro, Missouri&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Hilo Bay, Hawaii&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Hollywood, Florida&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Hoskins, Papua New Guinea&quot;' value='&quot;Papua New Guinea&quot;' />
          <semantic-value key='&quot;Houston, Texas&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Hualian, Taiwan&quot;' value='&quot;Taiwan&quot;' />
          <semantic-value key='&quot;Huambo, Angola&quot;' value='&quot;Angola&quot;' />
          <semantic-value key='&quot;Huangtian, China&quot;' value='&quot;China&quot;' />
          <semantic-value key='&quot;Huntsville, Texas&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Hyannis, Massachusetts&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Iliamna, Alaska&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Indian Trail, North Carolina&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Irkutsk-2, Russia&quot;' value='&quot;Russia&quot;' />
          <semantic-value key='&quot;Irkutsk, Russia&quot;' value='&quot;Russia&quot;' />
          <semantic-value key='&quot;Isfahan, Iran&quot;' value='&quot;Iran&quot;' />
          <semantic-value key='&quot;Isiro, DemoctratiRepubliCongo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
          <semantic-value key='&quot;Islamabad, Pakistan&quot;' value='&quot;Pakistan&quot;' />
          <semantic-value key='&quot;Ithaca, New York&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Jadura, Indonesia&quot;' value='&quot;Indonesia&quot;' />
          <semantic-value key='&quot;Jakobkondre, Suriname&quot;' value='&quot;Suriname&quot;' />
          <semantic-value key='&quot;Jalal-Abad, Afghanistan&quot;' value='&quot;Afghanistan&quot;' />
          <semantic-value key='&quot;Jalalabad, Afghanistan&quot;' value='&quot;Afghanistan&quot;' />
          <semantic-value key='&quot;Jayapura, Indonesia&quot;' value='&quot;Indonesia&quot;' />
          <semantic-value key='&quot;Jefferson City, Missouri&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Jellicoe, Ontario, Canada&quot;' value='&quot;Canada&quot;' />
          <semantic-value key='&quot;Jeneau, Alaska&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;Jiech, Sudan&quot;' value='&quot;Sudan&quot;' />
          <semantic-value key='&quot;Jodhura, Nepal&quot;' value='&quot;Nepal&quot;' />
          <semantic-value key='&quot;Johannesburg, South Africa&quot;' value='&quot;South Africa&quot;' />
          <semantic-value key='&quot;Joinville, Brazil&quot;' value='&quot;Brazil&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Net&#9;Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Operating Expense]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Operating Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Operating Revenue]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Other Expense*]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Pre-Tax Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
      <column caption='Registered Motor Vehicles (Thousands) (Cars 94-18.csv)' datatype='integer' name='[Registered Motor Vehicles (Thousands) (Cars_94-18.csv)]' role='measure' type='quantitative' />
      <column caption='Resident Population (Thousands) (Cars 94-18.csv)' datatype='integer' name='[Resident Population (Thousands) (Cars_94-18.csv)]' role='measure' type='quantitative' />
      <column caption='Seriously injured persons  (table 02 14 121819 2.csv1)' datatype='real' name='[Seriously injured persons  (table_02_14_121819 2.csv1)]' role='measure' type='quantitative' />
      <column caption='Seriously injured persons' datatype='real' name='[Seriously injured persons ]' role='measure' type='quantitative' />
      <column aggregation='Hour' datatype='datetime' name='[Time]' role='dimension' type='ordinal' />
      <column caption='Total Percent Cars' datatype='real' default-format='p0%' name='[Total Percent Airplane (copy)_83949951933067265]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Fatalities (Cars_94-18.csv)])/(Sum([Fatalities (Airplane Fatalities by Year 1918-2019.csv)]) + Sum([Fatalities (Cars_94-18.csv)]))' />
      </column>
      <column caption='Total Percent Airplane' datatype='real' default-format='p0%' name='[Total Percent Car (copy)_4200802947242176518]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Fatalities (Airplane Fatalities by Year 1918-2019.csv)])/(Sum([Fatalities (Airplane Fatalities by Year 1918-2019.csv)]) + Sum([Fatalities (Cars_94-18.csv)]))' />
      </column>
      <column caption='Total accidents (table 02 14 121819 2.csv1)' datatype='integer' name='[Total accidents (table_02_14_121819 2.csv1)]' role='measure' type='quantitative' />
      <column caption='Total accidents 1 (table 02 14 121819 2.csv1)' datatype='real' name='[Total accidents 1 (table_02_14_121819 2.csv1)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total accidents 1]' role='measure' type='quantitative' />
      <column caption='Total accidents, fatal (table 02 14 121819 2.csv1)' datatype='integer' name='[Total accidents, fatal (table_02_14_121819 2.csv1)]' role='measure' type='quantitative' />
      <column caption='Total accidents, fatal 1 (table 02 14 121819 2.csv1)' datatype='real' name='[Total accidents, fatal 1 (table_02_14_121819 2.csv1)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total accidents, fatal 1]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total accidents, fatal]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total accidents]' role='measure' type='quantitative' />
      <column caption='Total fatalities (table 02 14 121819 2.csv1)' datatype='integer' name='[Total fatalities (table_02_14_121819 2.csv1)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total fatalities]' role='measure' type='quantitative' />
      <column caption='Total seriously injured persons (table 02 14 121819 2.csv1)' datatype='integer' name='[Total seriously injured persons (table_02_14_121819 2.csv1)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total seriously injured persons]' role='measure' type='quantitative' />
      <column caption='Vehicle Miles Traveled (Billions) (Cars 94-18.csv)' datatype='integer' name='[Vehicle Miles Traveled (Billions) (Cars_94-18.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year (Airplane Fatalities by Year 1918-2019.csv)]' role='dimension' type='quantitative' />
      <column caption='Year (Cars 94-18.csv)' datatype='integer' name='[Year (Cars_94-18.csv)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Year (Page    2 Table  1)]' role='dimension' type='quantitative' />
      <column caption='Year (table 02 14 121819 2.csv)' datatype='integer' name='[Year (table_02_14_121819 2.csv)]' role='dimension' type='quantitative' />
      <column caption='Year (table 02 14 121819 2.csv1)' datatype='integer' name='[Year (table_02_14_121819 2.csv1)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Airplane Fatalities by Year 1918-2019.csv' datatype='table' name='[__tableau_internal_object_id__].[Airplane Fatalities by Year 1918-2019.csv_3DFA6051762E4938B4D6E571FADA5276]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Airplane_Crashes_and_Fatalities_Since_1908.csv' datatype='table' name='[__tableau_internal_object_id__].[Airplane_Crashes_and_Fatalities_Since_1908.csv_F67CADF6A9324B9A9D00112F68DC6FD3]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Cars_94-18.csv1' datatype='table' name='[__tableau_internal_object_id__].[Cars_94-18.csv_9C92852257674DC290E07B6C46DDE5BB]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Page    1 Table  1' datatype='table' name='[__tableau_internal_object_id__].[Page    1 Table  1_68FB1A5B5E6B49AEA7897F9F3867C19A]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Page    2 Table  1' datatype='table' name='[__tableau_internal_object_id__].[Page    2 Table  1_FEE34D7DD51A4E13B3B1F05E2AD37BBE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='airline-safety.csv' datatype='table' name='[__tableau_internal_object_id__].[airline-safety.csv_E11D6FCB18FE489C8C8B666CDF0FC194]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='table_02_14_121819 2.csv1' datatype='table' name='[__tableau_internal_object_id__].[table_02_14_121819 2.csv_E6A5920E08254DBDBA5AD1A344D92D34]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='table_02_14_121819 2.csv' datatype='table' name='[__tableau_internal_object_id__].[table_02_14_121819 2.csv_F951B9021F2144FD81A4FB065FE491F6]' role='measure' type='quantitative' />
      <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
      <column caption='Avail Seat Km Per Week' datatype='integer' name='[avail_seat_km_per_week]' role='dimension' type='quantitative' />
      <column caption='Fatal Accidents 00 14' datatype='integer' name='[fatal_accidents_00_14]' role='measure' type='quantitative' />
      <column caption='Fatal Accidents 85 99' datatype='integer' name='[fatal_accidents_85_99]' role='measure' type='quantitative' />
      <column caption='Fatalities 00 14' datatype='integer' name='[fatalities_00_14]' role='measure' type='quantitative' />
      <column caption='Fatalities 85 99' datatype='integer' name='[fatalities_85_99]' role='measure' type='quantitative' />
      <column caption='Incidents 00 14' datatype='integer' name='[incidents_00_14]' role='measure' type='quantitative' />
      <column caption='Incidents 85 99' datatype='integer' name='[incidents_85_99]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Airplane Fatalities by Year 1918-2019.csv_3DFA6051762E4938B4D6E571FADA5276]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Airplane Fatalities by Year 1918-2019.csv_3DFA6051762E4938B4D6E571FADA5276:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Airplane_Crashes_and_Fatalities_Since_1908.csv_F67CADF6A9324B9A9D00112F68DC6FD3]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Airplane_Crashes_and_Fatalities_Since_1908.csv_F67CADF6A9324B9A9D00112F68DC6FD3:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Cars_94-18.csv_9C92852257674DC290E07B6C46DDE5BB]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Cars_94-18.csv_9C92852257674DC290E07B6C46DDE5BB:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Page    1 Table  1_68FB1A5B5E6B49AEA7897F9F3867C19A]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Page    1 Table  1_68FB1A5B5E6B49AEA7897F9F3867C19A:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Page    2 Table  1_FEE34D7DD51A4E13B3B1F05E2AD37BBE]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Page    2 Table  1_FEE34D7DD51A4E13B3B1F05E2AD37BBE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[airline-safety.csv_E11D6FCB18FE489C8C8B666CDF0FC194]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:airline-safety.csv_E11D6FCB18FE489C8C8B666CDF0FC194:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[table_02_14_121819 2.csv_F951B9021F2144FD81A4FB065FE491F6]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:table_02_14_121819 2.csv_F951B9021F2144FD81A4FB065FE491F6:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_83949951753809920]' derivation='Attribute' name='[attr:Calculation_83949951753809920:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fatalities (Airplane Fatalities by Year 1918-2019.csv)]' derivation='Attribute' name='[attr:Fatalities (Airplane Fatalities by Year 1918-2019.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fatalities (Cars_94-18.csv)]' derivation='Attribute' name='[attr:Fatalities (Cars_94-18.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fatality Rate per 100 Million VMT (Cars_94-18.csv)]' derivation='Avg' name='[avg:Fatality Rate per 100 Million VMT (Cars_94-18.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fatalities]' derivation='Count' name='[cnt:Fatalities:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_83949951753809920]' derivation='None' name='[none:Calculation_83949951753809920:qk]' pivot='key' type='quantitative' />
      <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_4200802947241590789]' derivation='User' name='[pcto:usr:Calculation_4200802947241590789:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4200802947241590789]' derivation='User' name='[pcto:usr:Calculation_4200802947241590789:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4200802947241590789]' derivation='User' name='[pcto:usr:Calculation_4200802947241590789:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4200802947241590789]' derivation='User' name='[pcto:usr:Calculation_4200802947241590789:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-type='RowInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4200802947241590789]' derivation='User' name='[pcto:usr:Calculation_4200802947241590789:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Table' type='PctTotal' />
      </column-instance>
      <column-instance column='[Total Percent Car (copy)_4200802947242176518]' derivation='User' name='[pcto:usr:Total Percent Car (copy)_4200802947242176518:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Total Percent Car (copy)_4200802947242176518]' derivation='User' name='[pcto:usr:Total Percent Car (copy)_4200802947242176518:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Total Percent Car (copy)_4200802947242176518]' derivation='User' name='[pcto:usr:Total Percent Car (copy)_4200802947242176518:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Total Percent Car (copy)_4200802947242176518]' derivation='User' name='[pcto:usr:Total Percent Car (copy)_4200802947242176518:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-type='RowInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Total Percent Car (copy)_4200802947242176518]' derivation='User' name='[pcto:usr:Total Percent Car (copy)_4200802947242176518:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Table' type='PctTotal' />
      </column-instance>
      <column-instance column='[Aboard]' derivation='Sum' name='[sum:Aboard:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_83949951753809920]' derivation='Sum' name='[sum:Calculation_83949951753809920:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fatalities (Airplane Fatalities by Year 1918-2019.csv)]' derivation='Sum' name='[sum:Fatalities (Airplane Fatalities by Year 1918-2019.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fatalities (Cars_94-18.csv)]' derivation='Sum' name='[sum:Fatalities (Cars_94-18.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fatalities (table_02_14_121819 2.csv)]' derivation='Sum' name='[sum:Fatalities (table_02_14_121819 2.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fatalities]' derivation='Sum' name='[sum:Fatalities:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fatality Rate per 100 Million VMT (Cars_94-18.csv)]' derivation='Sum' name='[sum:Fatality Rate per 100 Million VMT (Cars_94-18.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fatality Rate per 100,000 Licensed Drivers (Cars_94-18.csv)]' derivation='Sum' name='[sum:Fatality Rate per 100,000 Licensed Drivers (Cars_94-18.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fatality Rate per 100,000 Population (Cars_94-18.csv)]' derivation='Sum' name='[sum:Fatality Rate per 100,000 Population (Cars_94-18.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fatality Rate per 100,000 Registered Vehicles (Cars_94-18.csv)]' derivation='Sum' name='[sum:Fatality Rate per 100,000 Registered Vehicles (Cars_94-18.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Flight #]' derivation='Sum' name='[sum:Flight #:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Flight hours (thousands)]' derivation='Sum' name='[sum:Flight hours (thousands):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fuel Expense]' derivation='Sum' name='[sum:Fuel Expense:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ground]' derivation='Sum' name='[sum:Ground:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Labor Expense]' derivation='Sum' name='[sum:Labor Expense:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Licensed Drivers (Thousands) (Cars_94-18.csv)]' derivation='Sum' name='[sum:Licensed Drivers (Thousands) (Cars_94-18.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net&#9;Profit]' derivation='Sum' name='[sum:Net&#9;Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Operating Expense]' derivation='Sum' name='[sum:Operating Expense:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Operating Profit]' derivation='Sum' name='[sum:Operating Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Operating Revenue]' derivation='Sum' name='[sum:Operating Revenue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Other Expense*]' derivation='Sum' name='[sum:Other Expense*:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pre-Tax Profit]' derivation='Sum' name='[sum:Pre-Tax Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Registered Motor Vehicles (Thousands) (Cars_94-18.csv)]' derivation='Sum' name='[sum:Registered Motor Vehicles (Thousands) (Cars_94-18.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Resident Population (Thousands) (Cars_94-18.csv)]' derivation='Sum' name='[sum:Resident Population (Thousands) (Cars_94-18.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Seriously injured persons ]' derivation='Sum' name='[sum:Seriously injured persons :qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total accidents 1]' derivation='Sum' name='[sum:Total accidents 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total accidents, fatal 1]' derivation='Sum' name='[sum:Total accidents, fatal 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total accidents, fatal]' derivation='Sum' name='[sum:Total accidents, fatal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total accidents]' derivation='Sum' name='[sum:Total accidents:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total fatalities]' derivation='Sum' name='[sum:Total fatalities:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total seriously injured persons]' derivation='Sum' name='[sum:Total seriously injured persons:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Vehicle Miles Traveled (Billions) (Cars_94-18.csv)]' derivation='Sum' name='[sum:Vehicle Miles Traveled (Billions) (Cars_94-18.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[fatal_accidents_00_14]' derivation='Sum' name='[sum:fatal_accidents_00_14:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fatal_accidents_85_99]' derivation='Sum' name='[sum:fatal_accidents_85_99:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fatalities_00_14]' derivation='Sum' name='[sum:fatalities_00_14:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fatalities_85_99]' derivation='Sum' name='[sum:fatalities_85_99:qk]' pivot='key' type='quantitative' />
      <column-instance column='[incidents_00_14]' derivation='Sum' name='[sum:incidents_00_14:qk]' pivot='key' type='quantitative' />
      <column-instance column='[incidents_85_99]' derivation='Sum' name='[sum:incidents_85_99:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_4200802947241590789]' derivation='User' name='[usr:Calculation_4200802947241590789:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_83949951753809920]' derivation='User' name='[usr:Calculation_83949951753809920:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Percent Airplane (copy)_83949951933067265]' derivation='User' name='[usr:Total Percent Airplane (copy)_83949951933067265:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Percent Car (copy)_4200802947242176518]' derivation='User' name='[usr:Total Percent Car (copy)_4200802947242176518:qk]' pivot='key' type='quantitative' />
      <group caption='United States' name='[Country Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Alabama&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Alaksa&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Alaska&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Arizona&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Arkansas&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;California&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Calilfornia&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Colorado&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Connecticut&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Florida&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Hawaii&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Idaho&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Illinois&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Indiana&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Kansas&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Kauai&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Kentucky&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Maine&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Miami&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Minnesota&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Missouri&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Montana&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;New Jersey&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;New Mexico&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;New York&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;North Carolina&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;North Dakota&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Ohio&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Pennsylvania&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Queens&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Rhode Island&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;San Vincente&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;South Carolina&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Tennesee&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Tennessee&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Texas&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Vermont&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Virginia&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Virginia.&quot;' />
          <groupfilter function='member' level='[Location - Split 2]' member='&quot;Wisconsin&quot;' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.955986' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0440141' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:airline:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;US Airways / America West*&quot;</bucket>
            </map>
            <map to='#2d5e89'>
              <bucket>&quot;United / Continental*&quot;</bucket>
            </map>
            <map to='#2e648e'>
              <bucket>&quot;Turkish Airlines&quot;</bucket>
            </map>
            <map to='#306a93'>
              <bucket>&quot;Thai Airways&quot;</bucket>
            </map>
            <map to='#317198'>
              <bucket>&quot;TAM&quot;</bucket>
            </map>
            <map to='#32789c'>
              <bucket>&quot;TACA&quot;</bucket>
            </map>
            <map to='#347ea1'>
              <bucket>&quot;Singapore Airlines&quot;</bucket>
            </map>
            <map to='#3484a6'>
              <bucket>&quot;SAS*&quot;</bucket>
            </map>
            <map to='#358baa'>
              <bucket>&quot;Philippine Airlines&quot;</bucket>
            </map>
            <map to='#3791af'>
              <bucket>&quot;Pakistan International&quot;</bucket>
            </map>
            <map to='#3d98b3'>
              <bucket>&quot;Malaysia Airlines&quot;</bucket>
            </map>
            <map to='#429eb7'>
              <bucket>&quot;Kenya Airways&quot;</bucket>
            </map>
            <map to='#4aa4ba'>
              <bucket>&quot;Gulf Air&quot;</bucket>
            </map>
            <map to='#55aabd'>
              <bucket>&quot;Garuda Indonesia&quot;</bucket>
            </map>
            <map to='#60b0c0'>
              <bucket>&quot;Ethiopian Airlines&quot;</bucket>
            </map>
            <map to='#6bb6c3'>
              <bucket>&quot;Egyptair&quot;</bucket>
            </map>
            <map to='#74bcc7'>
              <bucket>&quot;Delta / Northwest*&quot;</bucket>
            </map>
            <map to='#7ec1ca'>
              <bucket>&quot;China Airlines&quot;</bucket>
            </map>
            <map to='#88c7cc'>
              <bucket>&quot;American*&quot;</bucket>
            </map>
            <map to='#92ccce'>
              <bucket>&quot;Alaska Airlines*&quot;</bucket>
            </map>
            <map to='#9bd2d0'>
              <bucket>&quot;Air New Zealand*&quot;</bucket>
            </map>
            <map to='#a6d8d3'>
              <bucket>&quot;Air India*&quot;</bucket>
            </map>
            <map to='#b1ded5'>
              <bucket>&quot;Air France&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Aeroflot*&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:fatalities_85_99:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[attr:Calculation_83949951753809920:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Calculation_83949951753809920:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[pcto:usr:Total Percent Car (copy)_4200802947242176518:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[pcto:usr:Total Percent Car (copy)_4200802947242176518:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[pcto:usr:Total Percent Car (copy)_4200802947242176518:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[pcto:usr:Total Percent Car (copy)_4200802947242176518:qk:6]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[pcto:usr:Total Percent Car (copy)_4200802947242176518:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Aboard:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Calculation_83949951753809920:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Total accidents:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[usr:Calculation_4200802946970587137:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[usr:Calculation_83949951753809920:qk]&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatalities (Airplane Fatalities by Year 1918-2019.csv):qk]&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatalities:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[__tableau_internal_object_id__].[cnt:Airplane_Crashes_and_Fatalities_Since_1908.csv_F67CADF6A9324B9A9D00112F68DC6FD3:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[attr:Fatalities (Airplane Fatalities by Year 1918-2019.csv):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[usr:Calculation2:qk]&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatalities (Cars_94-18.csv):qk]&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[usr:Calculation_4200802947241590789:qk]&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[usr:Total Percent Airplane (copy)_83949951933067265:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[attr:Fatalities (Cars_94-18.csv):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[cnt:Fatalities:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fuel Expense:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatality Rate per 100,000 Population (Cars_94-18.csv):qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Labor Expense:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[avg:Fatality Rate per 100 Million VMT (Cars_94-18.csv):qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatality Rate per 100 Million VMT (Cars_94-18.csv):qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[__tableau_internal_object_id__].[cnt:airline-safety.csv_E11D6FCB18FE489C8C8B666CDF0FC194:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[__tableau_internal_object_id__].[cnt:BrentOilPrices.csv_9465A1846128417B891A0CF5A5DBEA9C:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Ground:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Other Expense*:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Resident Population (Thousands) (Cars_94-18.csv):qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[__tableau_internal_object_id__].[cnt:Airplane Fatalities by Year 1918-2019.csv_3DFA6051762E4938B4D6E571FADA5276:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Flight hours (thousands):qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Seriously injured persons :qk]&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Total accidents, fatal 1:qk]&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[usr:Total Percent Car (copy)_4200802947242176518:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Flight \#:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Operating Profit:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Rank:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:fatal_accidents_00_14:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[__tableau_internal_object_id__].[cnt:table_02_14_121819 2.csv_F951B9021F2144FD81A4FB065FE491F6:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatalities (table_02_14_121819 2.csv):qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatality Rate per 100,000 Registered Vehicles (Cars_94-18.csv):qk]&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Total accidents 1:qk]&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Total fatalities:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:incidents_85_99:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Net	Profit:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Operating Revenue:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Registered Motor Vehicles (Thousands) (Cars_94-18.csv):qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Pre-Tax Profit:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Vehicle Miles Traveled (Billions) (Cars_94-18.csv):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[__tableau_internal_object_id__].[cnt:Page    1 Table  1_68FB1A5B5E6B49AEA7897F9F3867C19A:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:fatal_accidents_85_99:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Total seriously injured persons:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[:Measure Names]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[pcto:usr:Calculation_4200802947241590789:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[pcto:usr:Calculation_4200802947241590789:qk:3]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[pcto:usr:Calculation_4200802947241590789:qk:5]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[pcto:usr:Calculation_4200802947241590789:qk:6]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[pcto:usr:Calculation_4200802947241590789:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:fatalities_00_14:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:incidents_00_14:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Total accidents, fatal:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Licensed Drivers (Thousands) (Cars_94-18.csv):qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Operating Expense:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[__tableau_internal_object_id__].[cnt:Page    2 Table  1_FEE34D7DD51A4E13B3B1F05E2AD37BBE:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatality Rate per 100,000 Licensed Drivers (Cars_94-18.csv):qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[__tableau_internal_object_id__].[cnt:Cars_94-18.csv_9C92852257674DC290E07B6C46DDE5BB:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[usr:Calculation1:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='alphabetical-order' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Airplane Fatalities by Year 1918-2019.csv' id='Airplane Fatalities by Year 1918-2019.csv_3DFA6051762E4938B4D6E571FADA5276'>
            <properties context=''>
              <relation connection='textscan.1fa2i7g12vyd2313eolk31vkg4p3' name='Airplane Fatalities by Year 1918-2019.csv' table='[/Users/bretyoung/Desktop/DSC 640/Final Project Data/Airplane Fatalities by Year 1918-2019#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Rank' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='integer' name='Fatalities' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Airplane_Crashes_and_Fatalities_Since_1908.csv' id='Airplane_Crashes_and_Fatalities_Since_1908.csv_F67CADF6A9324B9A9D00112F68DC6FD3'>
            <properties context=''>
              <relation connection='textscan.1vq5m350vr21s611js8oj0ta1uln' name='Airplane_Crashes_and_Fatalities_Since_1908.csv' table='[/Users/bretyoung/Desktop/DSC 640/Final Project Data/Airplane_Crashes_and_Fatalities_Since_1908#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='datetime' name='Time' ordinal='1' />
                  <column datatype='string' name='Location' ordinal='2' />
                  <column datatype='string' name='Operator' ordinal='3' />
                  <column datatype='integer' name='Flight #' ordinal='4' />
                  <column datatype='string' name='Route' ordinal='5' />
                  <column datatype='string' name='Type' ordinal='6' />
                  <column datatype='string' name='Registration' ordinal='7' />
                  <column datatype='string' name='cn/In' ordinal='8' />
                  <column datatype='integer' name='Aboard' ordinal='9' />
                  <column datatype='integer' name='Fatalities' ordinal='10' />
                  <column datatype='integer' name='Ground' ordinal='11' />
                  <column datatype='string' name='Summary' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Cars_94-18.csv1' id='Cars_94-18.csv_9C92852257674DC290E07B6C46DDE5BB'>
            <properties context=''>
              <relation connection='textscan.1fa2i7g12vyd2313eolk31vkg4p3' name='Cars_94-18.csv' table='[/Users/bretyoung/Desktop/DSC 640/Final Project Data/Cars_94-18#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='integer' name='Fatalities' ordinal='1' />
                  <column datatype='integer' name='Resident Population (Thousands)' ordinal='2' />
                  <column datatype='real' name='Fatality Rate per 100,000 Population' ordinal='3' />
                  <column datatype='integer' name='Licensed Drivers (Thousands)' ordinal='4' />
                  <column datatype='real' name='Fatality Rate per 100,000 Licensed Drivers' ordinal='5' />
                  <column datatype='integer' name='Registered Motor Vehicles (Thousands)' ordinal='6' />
                  <column datatype='real' name='Fatality Rate per 100,000 Registered Vehicles' ordinal='7' />
                  <column datatype='integer' name='Vehicle Miles Traveled (Billions)' ordinal='8' />
                  <column datatype='real' name='Fatality Rate per 100 Million VMT' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Page    1 Table  1' id='Page    1 Table  1_68FB1A5B5E6B49AEA7897F9F3867C19A'>
            <properties context=''>
              <relation connection='pdf.17iucm21jt13mc11l90051ejg7uw' name='Page    1 Table  1' table='[&apos;Page    1 Table  1$&apos;]' type='table'>
                <columns gridOrigin='A1:I48:no:A1:I48:4' lost='0' outcome='1' processed='362'>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='integer' name='Operating Revenue' ordinal='1' />
                  <column datatype='integer' name='Fuel Expense' ordinal='2' />
                  <column datatype='integer' name='Labor Expense' ordinal='3' />
                  <column datatype='integer' name='Other Expense*' ordinal='4' />
                  <column datatype='integer' name='Operating Expense' ordinal='5' />
                  <column datatype='integer' name='Operating Profit' ordinal='6' />
                  <column datatype='integer' name='Pre-Tax Profit' ordinal='7' />
                  <column datatype='string' name='Net&#9;Profi' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Page    2 Table  1' id='Page    2 Table  1_FEE34D7DD51A4E13B3B1F05E2AD37BBE'>
            <properties context=''>
              <relation connection='pdf.17iucm21jt13mc11l90051ejg7uw' name='Page    2 Table  1' table='[&apos;Page    2 Table  1$&apos;]' type='table'>
                <columns gridOrigin='A1:B44:no:A1:B44:1' lost='0' outcome='1' processed='86'>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='integer' name='Net&#9;Profit' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='airline-safety.csv' id='airline-safety.csv_E11D6FCB18FE489C8C8B666CDF0FC194'>
            <properties context=''>
              <relation connection='textscan.1ulwse1197fjmm15tyfiq0p3dctd' name='airline-safety.csv' table='[/Users/bretyoung/Desktop/DSC 640/Final Project Data/airline-safety#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='airline' ordinal='0' />
                  <column datatype='integer' name='avail_seat_km_per_week' ordinal='1' />
                  <column datatype='integer' name='incidents_85_99' ordinal='2' />
                  <column datatype='integer' name='fatal_accidents_85_99' ordinal='3' />
                  <column datatype='integer' name='fatalities_85_99' ordinal='4' />
                  <column datatype='integer' name='incidents_00_14' ordinal='5' />
                  <column datatype='integer' name='fatal_accidents_00_14' ordinal='6' />
                  <column datatype='integer' name='fatalities_00_14' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='table_02_14_121819 2.csv1' id='table_02_14_121819 2.csv_E6A5920E08254DBDBA5AD1A344D92D34'>
            <properties context=''>
              <relation connection='textscan.0uyazgz1a03yvy16a05jp078toar' name='table_02_14_121819 2.csv1' table='[table_02_14_121819 2#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='integer' name='Total fatalities' ordinal='1' />
                  <column datatype='integer' name='Total seriously injured persons' ordinal='2' />
                  <column datatype='integer' name='Total accidents' ordinal='3' />
                  <column datatype='integer' name='Total accidents, fatal' ordinal='4' />
                  <column datatype='integer' name='Flight hours (thousands)' ordinal='5' />
                  <column datatype='real' name='Fatalities' ordinal='6' />
                  <column datatype='real' name='Seriously injured persons ' ordinal='7' />
                  <column datatype='real' name='Total accidents 1' ordinal='8' />
                  <column datatype='real' name='Total accidents, fatal 1' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='table_02_14_121819 2.csv' id='table_02_14_121819 2.csv_F951B9021F2144FD81A4FB065FE491F6'>
            <properties context=''>
              <relation connection='textscan.0uyazgz1a03yvy16a05jp078toar' name='table_02_14_121819 2.csv' table='[table_02_14_121819 2#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='integer' name='Total fatalities' ordinal='1' />
                  <column datatype='integer' name='Total seriously injured persons' ordinal='2' />
                  <column datatype='integer' name='Total accidents' ordinal='3' />
                  <column datatype='integer' name='Total accidents, fatal' ordinal='4' />
                  <column datatype='integer' name='Flight hours (thousands)' ordinal='5' />
                  <column datatype='real' name='Fatalities' ordinal='6' />
                  <column datatype='real' name='Seriously injured persons ' ordinal='7' />
                  <column datatype='real' name='Total accidents 1' ordinal='8' />
                  <column datatype='real' name='Total accidents, fatal 1' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[fatalities_00_14]' />
              <expression op='[Fatalities (Airplane Fatalities by Year 1918-2019.csv)]' />
            </expression>
            <first-end-point object-id='airline-safety.csv_E11D6FCB18FE489C8C8B666CDF0FC194' />
            <second-end-point object-id='Airplane Fatalities by Year 1918-2019.csv_3DFA6051762E4938B4D6E571FADA5276' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Fatalities (Airplane Fatalities by Year 1918-2019.csv)]' />
              <expression op='[Fatalities]' />
            </expression>
            <first-end-point object-id='Airplane Fatalities by Year 1918-2019.csv_3DFA6051762E4938B4D6E571FADA5276' />
            <second-end-point object-id='Airplane_Crashes_and_Fatalities_Since_1908.csv_F67CADF6A9324B9A9D00112F68DC6FD3' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Year (Airplane Fatalities by Year 1918-2019.csv)]' />
              <expression op='[Year (Cars_94-18.csv)]' />
            </expression>
            <first-end-point object-id='Airplane Fatalities by Year 1918-2019.csv_3DFA6051762E4938B4D6E571FADA5276' />
            <second-end-point object-id='Cars_94-18.csv_9C92852257674DC290E07B6C46DDE5BB' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Year (Cars_94-18.csv)]' />
              <expression op='[Year]' />
            </expression>
            <first-end-point object-id='Cars_94-18.csv_9C92852257674DC290E07B6C46DDE5BB' />
            <second-end-point object-id='Page    1 Table  1_68FB1A5B5E6B49AEA7897F9F3867C19A' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Year (Cars_94-18.csv)]' />
              <expression op='[Year (Page    2 Table  1)]' />
            </expression>
            <first-end-point object-id='Cars_94-18.csv_9C92852257674DC290E07B6C46DDE5BB' />
            <second-end-point object-id='Page    2 Table  1_FEE34D7DD51A4E13B3B1F05E2AD37BBE' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Year (Airplane Fatalities by Year 1918-2019.csv)]' />
              <expression op='[Year (table_02_14_121819 2.csv1)]' />
            </expression>
            <first-end-point object-id='Airplane Fatalities by Year 1918-2019.csv_3DFA6051762E4938B4D6E571FADA5276' />
            <second-end-point object-id='table_02_14_121819 2.csv_E6A5920E08254DBDBA5AD1A344D92D34' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Year (Airplane Fatalities by Year 1918-2019.csv)]' />
              <expression op='[Year (table_02_14_121819 2.csv)]' />
            </expression>
            <first-end-point object-id='Airplane Fatalities by Year 1918-2019.csv_3DFA6051762E4938B4D6E571FADA5276' />
            <second-end-point object-id='table_02_14_121819 2.csv_F951B9021F2144FD81A4FB065FE491F6' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Total Fatalities by Vehicle' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Total Fatalities by Vehicle' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Airline Fatalities by Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Total Airplane Fatalities by Year for the United States</run>
            <run>Æ&#10;</run>
            <run fontcolor='#898989' fontsize='9'>We can see there is a large spike in 2001 due to the attacks on the World Trade Center in New York.</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Source: </run>
            <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://www.bts.gov/content/us-general-aviationa-safety-data&amp;quot;'>https://www.bts.gov/content/us-general-aviationa-safety-data</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Multiple Connections' name='federated.1ewkeyc1px91zx1czjfsr1g9mnrx' />
          </datasources>
          <datasource-dependencies datasource='federated.1ewkeyc1px91zx1czjfsr1g9mnrx'>
            <column datatype='integer' name='[Total fatalities]' role='measure' type='quantitative' />
            <column caption='Year (table 02 14 121819 2.csv)' datatype='integer' name='[Year (table_02_14_121819 2.csv)]' role='dimension' type='quantitative' />
            <column-instance column='[Year (table_02_14_121819 2.csv)]' derivation='None' name='[none:Year (table_02_14_121819 2.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total fatalities]' derivation='Sum' name='[sum:Total fatalities:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (table_02_14_121819 2.csv):qk]' included-values='in-range'>
            <min>1994</min>
            <max>2018</max>
          </filter>
          <slices>
            <column>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (table_02_14_121819 2.csv):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (table_02_14_121819 2.csv):qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Total fatalities:qk]' scope='rows' value='Fatalities' />
            <encoding attr='space' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (table_02_14_121819 2.csv):qk]' field-type='quantitative' max='2019' min='1993' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Total fatalities:qk]</rows>
        <cols>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (table_02_14_121819 2.csv):qk]</cols>
      </table>
      <simple-id uuid='{4EC2F3AF-3A38-48CF-9785-96CA0C2BAA2B}' />
    </worksheet>
    <worksheet name='Airline Incidents By Location'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Airline Fatalities by State (1994 - 2009)</run>
            <run>Æ&#10;</run>
            <run fontcolor='#898989' fontsize='9'>Anything labeled charter, private, cargo, helicopter, military or government were removed as we are only focusing on comercial airlines.</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run fontsize='8'>Source: </run>
            <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://data.world/youngb1801/air01/workspace/file?agentid=hhaveliw&amp;amp;datasetid=airplane-crashes-1908-2009&amp;amp;filename=Airplane_Crashes_and_Fatalities_Since_1908.csv&amp;quot;'>https://data.world/youngb1801/air01/workspace/file?agentid=hhaveliw&amp;datasetid=airplane-crashes-1908-2009&amp;filename=Airplane_Crashes_and_Fatalities_Since_1908.csv</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Multiple Connections' name='federated.1ewkeyc1px91zx1czjfsr1g9mnrx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ewkeyc1px91zx1czjfsr1g9mnrx'>
            <column caption='Country (copy)' datatype='string' name='[Country (copy)_4200802949705719819]' role='dimension' semantic-role='[State].[Name]' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[Location]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Location], &quot;,&quot;, 2 ) )' />
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Alaksa&quot;' value='&quot;Alaska&quot;' />
                <semantic-value key='&quot;CA&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;Calilfornia&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;GA&quot;' value='&quot;Georgia&quot;' />
                <semantic-value key='&quot;Georgia&quot;' value='&quot;Georgia&quot;' />
                <semantic-value key='&quot;Kauai&quot;' value='&quot;Hawaii&quot;' />
                <semantic-value key='&quot;Massachusetts&quot;' value='&quot;Massachusetts&quot;' />
                <semantic-value key='&quot;Miami&quot;' value='&quot;Florida&quot;' />
                <semantic-value key='&quot;Michigan&quot;' value='&quot;Michigan&quot;' />
                <semantic-value key='&quot;Nevada&quot;' value='&quot;Nevada&quot;' />
                <semantic-value key='&quot;New Hampshire&quot;' value='&quot;New Hampshire&quot;' />
                <semantic-value key='&quot;Queens&quot;' value='&quot;New York&quot;' />
                <semantic-value key='&quot;San Vincente&quot;' value='&quot;California&quot;' />
                <semantic-value key='&quot;Tennesee&quot;' value='&quot;Tennessee&quot;' />
                <semantic-value key='&quot;Washington&quot;' value='&quot;Washington&quot;' />
              </semantic-values>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Fatalities]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Location - Split 2]' role='dimension' semantic-role='[Country].[Name]' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[Location]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Location], &quot;,&quot;, 2 ) )' />
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Afghanstan&quot;' value='&quot;Afghanistan&quot;' />
                <semantic-value key='&quot;Africa&quot;' value='&quot;South Africa&quot;' />
                <semantic-value key='&quot;Aichi&quot;' value='&quot;Japan&quot;' />
                <semantic-value key='&quot;Alabama&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Alaksa&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Alaska&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Alberta&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot;Amapa&quot;' value='&quot;Brazil&quot;' />
                <semantic-value key='&quot;Arizona&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Arkansas&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Azores&quot;' value='&quot;Portugal&quot;' />
                <semantic-value key='&quot;Azores (Portugal)&quot;' value='&quot;Portugal&quot;' />
                <semantic-value key='&quot;Beni&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;British Colombia&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot;British Columbia&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot;California&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Calilfornia&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Catalina Island&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Chechnya&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;Colorado&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Comoros Islands&quot;' value='&quot;Mozambique&quot;' />
                <semantic-value key='&quot;Connecticut&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;DemocratiRepubliCogo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;DemocratiRepubliCongo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;DemocratiRepubliof Congo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;DemoctratiRepubliCongo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;Domincan Republic&quot;' value='&quot;Dominican Republic&quot;' />
                <semantic-value key='&quot;England&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Florida&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Hati&quot;' value='&quot;Haiti&quot;' />
                <semantic-value key='&quot;Hawaii&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Idaho&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Illinois&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;India / Kandahar&quot;' value='&quot;India&quot;' />
                <semantic-value key='&quot;Indiana&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Inner Mongolia&quot;' value='&quot;Mongolia&quot;' />
                <semantic-value key='&quot;Inodnesia&quot;' value='&quot;Indonesia&quot;' />
                <semantic-value key='&quot;Iowa&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Kansas&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Kauai&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Kentucky&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Kirghizia&quot;' value='&quot;Kyrgyzstan&quot;' />
                <semantic-value key='&quot;Maine&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Manatoba&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot;Manitoba&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot;Manmar&quot;' value='&quot;Myanmar&quot;' />
                <semantic-value key='&quot;Maryland&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Massachusetts&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Miami&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Michigan&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Minnesota&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Missouri&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Montana&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Morroco&quot;' value='&quot;Morocco&quot;' />
                <semantic-value key='&quot;Napal&quot;' value='&quot;Nepal&quot;' />
                <semantic-value key='&quot;near Natanz&quot;' value='&quot;Iran&quot;' />
                <semantic-value key='&quot;near PacifiGrove&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Nevada&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;New Brunswick&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot;New Guinea&quot;' value='&quot;Papua New Guinea&quot;' />
                <semantic-value key='&quot;New Hampshire&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;New Jersey&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;New Mexico&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;New York&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Newfoundland&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot;Norfork&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;North Carolina&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;North Dakota&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Northwest Territories&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot;Nova Scotia&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot;off Angola&quot;' value='&quot;Angola&quot;' />
                <semantic-value key='&quot;off Pelee Island&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot;Ohio&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Ontario&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot;Papua&quot;' value='&quot;Papua New Guinea&quot;' />
                <semantic-value key='&quot;Para&quot;' value='&quot;Paraguay&quot;' />
                <semantic-value key='&quot;Pennsylvania&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Providencia Island&quot;' value='&quot;Colombia&quot;' />
                <semantic-value key='&quot;Quebec&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot;Queens&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Queensland&quot;' value='&quot;Australia&quot;' />
                <semantic-value key='&quot;Queensland  Australia&quot;' value='&quot;Australia&quot;' />
                <semantic-value key='&quot;Republiof Djibouti&quot;' value='&quot;Djibouti&quot;' />
                <semantic-value key='&quot;Republiof Georgia&quot;' value='&quot;Georgia&quot;' />
                <semantic-value key='&quot;Rhode Island&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Rio de Janeiro&quot;' value='&quot;Brazil&quot;' />
                <semantic-value key='&quot;San Vincente&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Sao Paulo&quot;' value='&quot;Brazil&quot;' />
                <semantic-value key='&quot;Saskatchewan&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot;Scotland&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Siberia&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;South Carolina&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;South Dakota&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Tasmania&quot;' value='&quot;Australia&quot;' />
                <semantic-value key='&quot;Tennesee&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Tennessee&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Texas&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Trento&quot;' value='&quot;Italy&quot;' />
                <semantic-value key='&quot;Turks &amp; Caicos Islands&quot;' value='&quot;Turks and Caicos Islands&quot;' />
                <semantic-value key='&quot;Utah&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Valle del Cauca&quot;' value='&quot;Colombia&quot;' />
                <semantic-value key='&quot;Vermont&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Virginia&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Virginia.&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Washington&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Wisconsin&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Wisconson&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Wyoming&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Yugosalvia&quot;' value='&quot;Montenegro&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;570 miles northeast of Natal&quot;' value='-5.7999999999999998' />
                <semantic-value key='&quot;Black Sea&quot;' value='43.412999999999997' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;570 miles northeast of Natal&quot;' value='-35.299999999999997' />
                <semantic-value key='&quot;Black Sea&quot;' value='34.299300000000002' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Abakan, Siberia, Russia&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;Abéché, Chad&quot;' value='&quot;Chad&quot;' />
                <semantic-value key='&quot;Aberdeen, South Dakota&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Abuja, Nigeria&quot;' value='&quot;Nigeria&quot;' />
                <semantic-value key='&quot;Accra, Ghana&quot;' value='&quot;Ghana&quot;' />
                <semantic-value key='&quot;Adar Yeil, Sudan&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;Agana, Guam&quot;' value='&quot;Guam&quot;' />
                <semantic-value key='&quot;Alamosa, Colorado&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Algiers Airport, Algeria&quot;' value='&quot;Algeria&quot;' />
                <semantic-value key='&quot;Alice Springs, Australia&quot;' value='&quot;Australia&quot;' />
                <semantic-value key='&quot;Alma, Wisconsin&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Alsworth, Alaska&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Alto da Boa Vista, Brazil&quot;' value='&quot;Brazil&quot;' />
                <semantic-value key='&quot;Ambato, Ecuador&quot;' value='&quot;Ecuador&quot;' />
                <semantic-value key='&quot;Amritsar, India / Kandahar, Afghanistan&quot;' value='&quot;India&quot;' />
                <semantic-value key='&quot;Amsterdam, Netherlands&quot;' value='&quot;Netherlands&quot;' />
                <semantic-value key='&quot;Anchor Point, Alaska&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Anchorage, Alaska&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Andoas, Peru&quot;' value='&quot;Peru&quot;' />
                <semantic-value key='&quot;Anjouan, Comoros Islands&quot;' value='&quot;Comoros&quot;' />
                <semantic-value key='&quot;Arequipa, Peru&quot;' value='&quot;Peru&quot;' />
                <semantic-value key='&quot;Arlington, Virginia.&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Aru, DemocratiRepubliCogo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;Ashbaubenon, Wisconsin&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Asmara, Eritrea&quot;' value='&quot;Eritrea&quot;' />
                <semantic-value key='&quot;Asuncion, Paraguay&quot;' value='&quot;Paraguay&quot;' />
                <semantic-value key='&quot;Atlanta, Georgia&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Aubusson, France&quot;' value='&quot;France&quot;' />
                <semantic-value key='&quot;Aurora, Illinois&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Avenal, California&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Bacolod, Philippines&quot;' value='&quot;Philippines&quot;' />
                <semantic-value key='&quot;Bagasin, Papua New Guinea&quot;' value='&quot;Papua New Guinea&quot;' />
                <semantic-value key='&quot;Bahia Negra, Paraguay&quot;' value='&quot;Paraguay&quot;' />
                <semantic-value key='&quot;Baie-Comeau, Canada&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot;Baku, Azerbaijan&quot;' value='&quot;Azerbaijan&quot;' />
                <semantic-value key='&quot;Bandung, Indonesia&quot;' value='&quot;Indonesia&quot;' />
                <semantic-value key='&quot;Baney, Equatorial Guinea&quot;' value='&quot;Equatorial Guinea&quot;' />
                <semantic-value key='&quot;Bangkok, Thailand&quot;' value='&quot;Thailand&quot;' />
                <semantic-value key='&quot;Bangui, Central African Republic&quot;' value='&quot;Central African Republic&quot;' />
                <semantic-value key='&quot;Banjarmasin, Indonesia&quot;' value='&quot;Indonesia&quot;' />
                <semantic-value key='&quot;Banjul, Gambia&quot;' value='&quot;Gambia&quot;' />
                <semantic-value key='&quot;Bannang Sata, Thailand&quot;' value='&quot;Thailand&quot;' />
                <semantic-value key='&quot;Baotou, Inner Mongolia, China&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Bapi, Papua New Guinea&quot;' value='&quot;Papua New Guinea&quot;' />
                <semantic-value key='&quot;Barcelona, Spain&quot;' value='&quot;Spain&quot;' />
                <semantic-value key='&quot;Barskoon, Kirghizia&quot;' value='&quot;Kyrgyzstan&quot;' />
                <semantic-value key='&quot;Batagaj, Russia&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;Baucau, East Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Bayfield, Colorado&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Beaver Dam, Arizona&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Beaver Island, Minnesota&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Bejuma, Venezuela&quot;' value='&quot;Venezuela&quot;' />
                <semantic-value key='&quot;Belelm, Brazil&quot;' value='&quot;Brazil&quot;' />
                <semantic-value key='&quot;Belem, Para, Brazil&quot;' value='&quot;Brazil&quot;' />
                <semantic-value key='&quot;Belgrade, Montana&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Belgrade, Yugosalvia&quot;' value='&quot;Kosovo&quot;' />
                <semantic-value key='&quot;Belle Harbor, Queens, New York&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Bellevue, Idaho&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Belo Horizonte, Brazil&quot;' value='&quot;Brazil&quot;' />
                <semantic-value key='&quot;Bessemer, Alabama&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Bethel, Alaska&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Bethel, Arkansas&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Between Kibo &amp; Mawenzi Peaks of Mt. Kilimanjaroi, Tanzania&quot;' value='&quot;Tanzania&quot;' />
                <semantic-value key='&quot;Bilbao, Spain&quot;' value='&quot;Spain&quot;' />
                <semantic-value key='&quot;Billings, Montana&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Bimin, Papua, New Guinea&quot;' value='&quot;Papua New Guinea&quot;' />
                <semantic-value key='&quot;Bintuni,  Indonesia&quot;' value='&quot;Indonesia&quot;' />
                <semantic-value key='&quot;Birchwil, Switzerland&quot;' value='&quot;Switzerland&quot;' />
                <semantic-value key='&quot;Birmingham, England&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Bishkek, Kyrgyzstan&quot;' value='&quot;Kyrgyzstan&quot;' />
                <semantic-value key='&quot;Bismark, North Dakota&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Bitonja, Bosnia-Herzegovina&quot;' value='&quot;Bosnia and Herzegovina&quot;' />
                <semantic-value key='&quot;Blace, Macedonia&quot;' value='&quot;North Macedonia&quot;' />
                <semantic-value key='&quot;Blida, Algeria&quot;' value='&quot;Algeria&quot;' />
                <semantic-value key='&quot;Bluefields, Nicaragua&quot;' value='&quot;Nicaragua&quot;' />
                <semantic-value key='&quot;Blyn, Washington&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Boca Raton, Florida&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Boende, Congo&quot;' value='&quot;Congo&quot;' />
                <semantic-value key='&quot;Boise, Idaho&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Bolchaïa Pyssa, Russia&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;Boma, DemocratiRepubliCongo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;Bozoy, Kazakhstan&quot;' value='&quot;Kazakhstan&quot;' />
                <semantic-value key='&quot;Brazzaville, DemocratiRepubliCongo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;Bremerhaven, Germany&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;Bridgeton, Missouri&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Brno, Czech Republic&quot;' value='&quot;Czechia&quot;' />
                <semantic-value key='&quot;Buah Nabar, Indonesia&quot;' value='&quot;Indonesia&quot;' />
                <semantic-value key='&quot;Bucharest, Romania&quot;' value='&quot;Romania&quot;' />
                <semantic-value key='&quot;Buenos Aires, Argentina&quot;' value='&quot;Argentina&quot;' />
                <semantic-value key='&quot;Buenos Aires, Brazil&quot;' value='&quot;Brazil&quot;' />
                <semantic-value key='&quot;Bukalaza, Uganda&quot;' value='&quot;Uganda&quot;' />
                <semantic-value key='&quot;Bukavu, DemocratiRepubliCongo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;Bundeena, Australia&quot;' value='&quot;Australia&quot;' />
                <semantic-value key='&quot;Burbank, Calilfornia&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Burlington Township, New Jersey&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Busan, South Korea&quot;' value='&quot;South Korea&quot;' />
                <semantic-value key='&quot;Busia, Kenya&quot;' value='&quot;Kenya&quot;' />
                <semantic-value key='&quot;Butte, Montana&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Byers, Colorado&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Cagliari, Italy&quot;' value='&quot;Italy&quot;' />
                <semantic-value key='&quot;Caguas, Puerto Rico&quot;' value='&quot;Puerto Rico&quot;' />
                <semantic-value key='&quot;Cajon Pass, California&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Calabar , Nigeria&quot;' value='&quot;Nigeria&quot;' />
                <semantic-value key='&quot;Camp Springs, Maryland&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Campbell River, British Columbia, Canada&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot;Canaima National Park, Venezuela&quot;' value='&quot;Venezuela&quot;' />
                <semantic-value key='&quot;Cap Haitien, Haiti&quot;' value='&quot;Haiti&quot;' />
                <semantic-value key='&quot;Caracas, Venezuela&quot;' value='&quot;Venezuela&quot;' />
                <semantic-value key='&quot;Carajas, Brazil&quot;' value='&quot;Brazil&quot;' />
                <semantic-value key='&quot;Carepa, Colombia&quot;' value='&quot;Colombia&quot;' />
                <semantic-value key='&quot;Cartagena, Colombia&quot;' value='&quot;Colombia&quot;' />
                <semantic-value key='&quot;Cerro Aicha, Venezuela&quot;' value='&quot;Venezuela&quot;' />
                <semantic-value key='&quot;Cerro San Jeronimo, Colombia&quot;' value='&quot;Colombia&quot;' />
                <semantic-value key='&quot;Chaibukha, Russia&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;Chanco, Chile&quot;' value='&quot;Chile&quot;' />
                <semantic-value key='&quot;Chantilly, Virginia&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Charllis, Idaho&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Charlotte, North Carolina&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Cheju, South Korea&quot;' value='&quot;South Korea&quot;' />
                <semantic-value key='&quot;Cherkessk, Russia&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;Cheyenne, Wyoming&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Chicago, Illinois&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Chilpancingo, Mexico&quot;' value='&quot;Mexico&quot;' />
                <semantic-value key='&quot;Chimanta mountains, Venezuela&quot;' value='&quot;Venezuela&quot;' />
                <semantic-value key='&quot;Chrallave, Venezuela&quot;' value='&quot;Venezuela&quot;' />
                <semantic-value key='&quot;Chrisinau, Moldova&quot;' value='&quot;Moldova&quot;' />
                <semantic-value key='&quot;Christchurch, New Zealand&quot;' value='&quot;New Zealand&quot;' />
                <semantic-value key='&quot;Cincinnati, Ohio&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Ciudad Bolivar, Venezuela&quot;' value='&quot;Venezuela&quot;' />
                <semantic-value key='&quot;Clarence Center, New York&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Coconut Island, QLD, Australia&quot;' value='&quot;Australia&quot;' />
                <semantic-value key='&quot;Cody, Wyoming&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Colon, Panama&quot;' value='&quot;Panama&quot;' />
                <semantic-value key='&quot;Columbia, South Carolina&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Columbus, Ohio&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Connemara, Ireland&quot;' value='&quot;Ireland&quot;' />
                <semantic-value key='&quot;Córdoba, Argentina&quot;' value='&quot;Argentina&quot;' />
                <semantic-value key='&quot;Cordoba, Spain&quot;' value='&quot;Spain&quot;' />
                <semantic-value key='&quot;Coron Island, Philippines&quot;' value='&quot;Philippines&quot;' />
                <semantic-value key='&quot;Coron, Philippines&quot;' value='&quot;Philippines&quot;' />
                <semantic-value key='&quot;Cotonou, Benin&quot;' value='&quot;Benin&quot;' />
                <semantic-value key='&quot;Coventry, England&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Criciúma, Brazil&quot;' value='&quot;Brazil&quot;' />
                <semantic-value key='&quot;Cubatao, Brazil&quot;' value='&quot;Brazil&quot;' />
                <semantic-value key='&quot;Cuenca, Ecuador&quot;' value='&quot;Ecuador&quot;' />
                <semantic-value key='&quot;Cuiaba, Brazil&quot;' value='&quot;Brazil&quot;' />
                <semantic-value key='&quot;Culiacan, Mexico&quot;' value='&quot;Mexico&quot;' />
                <semantic-value key='&quot;Curitiba, Brazil&quot;' value='&quot;Brazil&quot;' />
                <semantic-value key='&quot;Dalang, Sudan&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;Davis Inlet, Newfoundland, Canada&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot;Decatur Island, Washington&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Del Rio, Texas&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Dhahran, Saudi Arabia&quot;' value='&quot;Saudi Arabia&quot;' />
                <semantic-value key='&quot;Dillingham, Alaska&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Diyarbakir, Turkey&quot;' value='&quot;Turkey&quot;' />
                <semantic-value key='&quot;Dorchester, New Hampshire&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;East Bay Cay, Turks &amp; Caicos Islands&quot;' value='&quot;Turks and Caicos Islands&quot;' />
                <semantic-value key='&quot;East Kalimantan, Indonesia&quot;' value='&quot;Indonesia&quot;' />
                <semantic-value key='&quot;East Midlands, England&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Edenton, North Carolina&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Edgewater, Maryland&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Eel River Crossing, New Brunswick, Canada&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot;Eider Point, Alaska&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;El Embrujo, Providencia Island, Colombia&quot;' value='&quot;Colombia&quot;' />
                <semantic-value key='&quot;El Junquito, Venezuela&quot;' value='&quot;Venezuela&quot;' />
                <semantic-value key='&quot;El Portezulo, Argentina&quot;' value='&quot;Argentina&quot;' />
                <semantic-value key='&quot;El Yopal, Colombia&quot;' value='&quot;Colombia&quot;' />
                <semantic-value key='&quot;El Zapotal, Guatemala&quot;' value='&quot;Guatemala&quot;' />
                <semantic-value key='&quot;Elim, Alaksa&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Ellsworth AFB, South Dakota&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Enarotali, Indonesia&quot;' value='&quot;Indonesia&quot;' />
                <semantic-value key='&quot;Ennadai Lake, Canada&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot;Eveleth, Minnesota&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Everglades, Miami, Florida&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Fallujah, Iraq&quot;' value='&quot;Iraq&quot;' />
                <semantic-value key='&quot;Fazenda Nossa Senhora de Lourdes, Brazil&quot;' value='&quot;Brazil&quot;' />
                <semantic-value key='&quot;Ferguson, Kentucky&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Fish Egg Inlet, Canada&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot;Flagstaff, Arizona&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Florence, Italy&quot;' value='&quot;Italy&quot;' />
                <semantic-value key='&quot;Fort Wayne, Indiana&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Fortaleza, Brazil&quot;' value='&quot;Brazil&quot;' />
                <semantic-value key='&quot;Fotina, Greece&quot;' value='&quot;Greece&quot;' />
                <semantic-value key='&quot;Foveaux Strait, New Zealand&quot;' value='&quot;New Zealand&quot;' />
                <semantic-value key='&quot;Freetown, Sierra Leone&quot;' value='&quot;Sierra Leone&quot;' />
                <semantic-value key='&quot;Fukuoka, Japan&quot;' value='&quot;Japan&quot;' />
                <semantic-value key='&quot;Gaspé, Quebec, Canada&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot;Geilenkirchen, Germany&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;Genoa, Italy&quot;' value='&quot;Italy&quot;' />
                <semantic-value key='&quot;George, South Africa&quot;' value='&quot;South Africa&quot;' />
                <semantic-value key='&quot;Geti, DemocratiRepubliCongo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;Ghardaïa, Algeria&quot;' value='&quot;Algeria&quot;' />
                <semantic-value key='&quot;Glasgow, Scotland&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Gohu Airstrip, Papua New Guinea&quot;' value='&quot;Papua New Guinea&quot;' />
                <semantic-value key='&quot;Goma, Congo&quot;' value='&quot;Congo&quot;' />
                <semantic-value key='&quot;Goma, DemocratiRepubliCongo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;Gonesse, France&quot;' value='&quot;France&quot;' />
                <semantic-value key='&quot;Goroka,  New Guinea&quot;' value='&quot;Papua New Guinea&quot;' />
                <semantic-value key='&quot;Goroka, Papua New Guinea&quot;' value='&quot;Papua New Guinea&quot;' />
                <semantic-value key='&quot;Great Falls, Montana&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Great Hallingbury, United Kingdom&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Griesta, United Kingdom&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Griffin, Georgia&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Groton, Connecticut&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Guatemala City, Guatemala&quot;' value='&quot;Guatemala&quot;' />
                <semantic-value key='&quot;Guernsey, Channel Islands, England&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Gumey, Papua New Guinea&quot;' value='&quot;Papua New Guinea&quot;' />
                <semantic-value key='&quot;Gunung Antara, Indonesia&quot;' value='&quot;Indonesia&quot;' />
                <semantic-value key='&quot;Gustavia, St. Barthélémy, French West Indies&quot;' value='&quot;French Guiana&quot;' />
                <semantic-value key='&quot;Gyandzha, Azerbaijan&quot;' value='&quot;Azerbaijan&quot;' />
                <semantic-value key='&quot;Haena, Hawaii&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Haines, Alaska&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Halifax, Nova Scotia, Canada&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot;Hamburg, Germany&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;Hamilton Island, QLD, Australia&quot;' value='&quot;Australia&quot;' />
                <semantic-value key='&quot;Hanalei, Hawaii&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Hanea, Kauai, Hawaii&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Helendale, California&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Herputchi, Russia&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;Herreira, Spain&quot;' value='&quot;Spain&quot;' />
                <semantic-value key='&quot;High Prarie, Alberta, Canada&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot;Hillsboro, Missouri&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Hilo Bay, Hawaii&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Hollywood, Florida&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Hoskins, Papua New Guinea&quot;' value='&quot;Papua New Guinea&quot;' />
                <semantic-value key='&quot;Houston, Texas&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Hualian, Taiwan&quot;' value='&quot;Taiwan&quot;' />
                <semantic-value key='&quot;Huambo, Angola&quot;' value='&quot;Angola&quot;' />
                <semantic-value key='&quot;Huangtian, China&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;Huntsville, Texas&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Hyannis, Massachusetts&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Iliamna, Alaska&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Indian Trail, North Carolina&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Irkutsk-2, Russia&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;Irkutsk, Russia&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;Isfahan, Iran&quot;' value='&quot;Iran&quot;' />
                <semantic-value key='&quot;Isiro, DemoctratiRepubliCongo&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;Islamabad, Pakistan&quot;' value='&quot;Pakistan&quot;' />
                <semantic-value key='&quot;Ithaca, New York&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Jadura, Indonesia&quot;' value='&quot;Indonesia&quot;' />
                <semantic-value key='&quot;Jakobkondre, Suriname&quot;' value='&quot;Suriname&quot;' />
                <semantic-value key='&quot;Jalal-Abad, Afghanistan&quot;' value='&quot;Afghanistan&quot;' />
                <semantic-value key='&quot;Jalalabad, Afghanistan&quot;' value='&quot;Afghanistan&quot;' />
                <semantic-value key='&quot;Jayapura, Indonesia&quot;' value='&quot;Indonesia&quot;' />
                <semantic-value key='&quot;Jefferson City, Missouri&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Jellicoe, Ontario, Canada&quot;' value='&quot;Canada&quot;' />
                <semantic-value key='&quot;Jeneau, Alaska&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;Jiech, Sudan&quot;' value='&quot;Sudan&quot;' />
                <semantic-value key='&quot;Jodhura, Nepal&quot;' value='&quot;Nepal&quot;' />
                <semantic-value key='&quot;Johannesburg, South Africa&quot;' value='&quot;South Africa&quot;' />
                <semantic-value key='&quot;Joinville, Brazil&quot;' value='&quot;Brazil&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Operator]' role='dimension' type='nominal' />
            <column-instance column='[Country (copy)_4200802949705719819]' derivation='None' name='[none:Country (copy)_4200802949705719819:nk]' pivot='key' type='nominal' />
            <column-instance column='[Operator]' derivation='None' name='[none:Operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Fatalities]' derivation='Sum' name='[sum:Fatalities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[Country Set]' />
          <filter class='quantitative' column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Operator:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Ababeel Aviaition&quot;' function='range' level='[none:Operator:nk]' to='&quot;Aca-Ancargo&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;ACES Colombia&quot;' />
              <groupfilter from='&quot;Action Air Express Inc. - Air Taxi&quot;' function='range' level='[none:Operator:nk]' to='&quot;ADC Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;ADES Colombia&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Adventure Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Aéreo Ruta Maya&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Aero Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Aero Ferinco Charter&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Aero Jet Express&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Aero Pantanal - Air Taxi&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Aero Tropical&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Aero-Tropics&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Aerocaribe&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Aerocom&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Aerocontroctors - Charter&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Aerocord&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Aeroextra&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Aeroflot&quot;' />
              <groupfilter from='&quot;Aeroflot Russian International Airways&quot;' function='range' level='[none:Operator:nk]' to='&quot;Aerolatino (Aerocaribe)&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Aerolift&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Aerolineas Cuahonte&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Aeromexico&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Aeromist-Kharkiv&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Aeronautical Services - Air Taxi&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Aeronica&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Aeroperlas&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Aeroperu&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Aeroservice International&quot;' />
              <groupfilter from='&quot;Aeroservicios Empresariales de Durango&quot;' function='range' level='[none:Operator:nk]' to='&quot;Aerotaxi Manaus&quot;' />
              <groupfilter from='&quot;Aerotransportes Petroleros&quot;' function='range' level='[none:Operator:nk]' to='&quot;Aerovanguardia&quot;' />
              <groupfilter from='&quot;Africa One Congo&quot;' function='range' level='[none:Operator:nk]' to='&quot;African Commuter Services&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Agco Corp&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Algerie&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Angles Inc.&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Anguilla&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Caraibes&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Charter - Tanzanian Air Services&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air China&quot;' />
              <groupfilter from='&quot;Air Fiji&quot;' function='range' level='[none:Operator:nk]' to='&quot;Air Flamence&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air France&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Freight New Zealand&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Georgian&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Global&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Ivorie&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Karibu&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Kasai&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Littoral&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Luxor&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Martinique&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Mauritanie&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Memphis&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Moorea&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air North&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air One Executive&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Pereira&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Philippines&quot;' />
              <groupfilter from='&quot;Air Saint Maurice Inc.&quot;' function='range' level='[none:Operator:nk]' to='&quot;Air Senegal&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Serv Internatiional/CemAir&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Services&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air St. Martin&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Sunshine&quot;' />
              <groupfilter from='&quot;Air Tahoma&quot;' function='range' level='[none:Operator:nk]' to='&quot;Air taxi - Aero Air Taxi&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air taxi - Air Safaris Inc.&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Taxi - Air Taxi Inc.&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Taxi - Bigfoot Air of Alaska, LLC&quot;' />
              <groupfilter from='&quot;Air Taxi - Coastal Airways Inc.&quot;' function='range' level='[none:Operator:nk]' to='&quot;Air taxi - Cuiaba Air Taxi&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Taxi - Durango Air Service&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Taxi - El Aero Services Inc.&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Taxi - Grant Aviation Inc.&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Taxi - Great Northern Aircraft Co.&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Taxi - Iliamna, Air Taxi Inc.&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Taxi - Island Air Service&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air taxi - Jao Air Taxi&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Taxi - Lab Flying Service Inc.&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Taxi - Lake Clark Air Inc.&quot;' />
              <groupfilter from='&quot;Air taxi - Lider Air Taxi&quot;' function='range' level='[none:Operator:nk]' to='&quot;Air Taxi - Marco Zero Air Taxi&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Taxi - National Helicopters&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Taxi - New England Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Taxi - Ohana Helicopter Tours&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Taxi - Papillion Helicopters Ltd.&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Taxi - Peninsula Airways&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air taxi - Rumo Notre Air Taxi&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Taxi - Ryan Air Service&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Taxi - Seaside Air Service&quot;' />
              <groupfilter from='&quot;Air Taxi - Stanley Air Taxi&quot;' function='range' level='[none:Operator:nk]' to='&quot;Air Taxi - Sun Western Flyers Inc.&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Taxi - Talon Air Services Inc.&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air taxi - TAM&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Taxi - US Helicopters Inc.&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Taxi - Uyak Air Services Inc.&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Taxi - Wolfe Air Aviation Ltd.&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Trek&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air Turks &amp; Caicos&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Air West&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Airborne Express&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Airbus Industrie&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Airco Charters - Air Taxi&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;AIRES Colombia&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Airfast Services&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Airline Transport&quot;' />
              <groupfilter from='&quot;Airlines of PNG&quot;' function='range' level='[none:Operator:nk]' to='&quot;Airquarius Aviation - Charter&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Airwave Transport&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Airwork&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Akhal Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Alada&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;ALADA&quot;' />
              <groupfilter from='&quot;Alantis Aviation&quot;' function='range' level='[none:Operator:nk]' to='&quot;Alas Nacionales, leased from Birgen Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Alaska Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;ALIANSA Colombia&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;All Nippon Airways&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Alliance Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Alpine Air Express&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Alpine Aviation &quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;American Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;American Eagle&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;American Jet&quot;' />
              <groupfilter from='&quot;American Virginia&quot;' function='range' level='[none:Operator:nk]' to='&quot;Ameristar Jet Charter&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Ansett New Zealand&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;ANT Air Taxi&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Apline Aviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Arall&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Aramco Associated Company&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Ararat Avia&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Aray-Avia&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Archana Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;ArctiTransportation Services&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Ariana Afghan Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Armavia&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Arsenyev Aviation Production Association&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Asa Pesada&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Asian Spirit&quot;' />
              <groupfilter from='&quot;Astro Air Taxi&quot;' function='range' level='[none:Operator:nk]' to='&quot;AtlantiAirways&quot;' />
              <groupfilter from='&quot;AtlantiCoast Airlines (United Express)&quot;' function='range' level='[none:Operator:nk]' to='&quot;Atran&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Aurukun Air Services&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Austral Lineas Aeras (Argentina)&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;AVCOM&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Avia Air Aruba&quot;' />
              <groupfilter from='&quot;Aviastar Mandiri&quot;' function='range' level='[none:Operator:nk]' to='&quot;Aviation Charter - Air Taxi&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Avioriprese Jet Executive&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Avirex&quot;' />
              <groupfilter from='&quot;Avisto&quot;' function='range' level='[none:Operator:nk]' to='&quot;Azov Avia Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Baikal Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Bako Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;BAL Bremerhaven Airline&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Bankair&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Baron Aviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Bashkirian Airlines / DHL Worldwide Express&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Bazair&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Bearskin Airlines / Air Sandy&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Bellview Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Big Island Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Bimini Air Charter Inc.&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Binter Mediterráneo&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Blue Bird Aviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Blue Water Aviation Services&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Blue Wing Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Bombardier Aerospace&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Borneo Airways&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Bourag Indonesia Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Brit Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;British Airways&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;British World Airways&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Buffalo Narrows Airways&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Business Air Connection&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Business Jet Services&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;CAAC Air TraffiManagement Bureau&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Cabo Verde Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Cameroon Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Canada Jet Charters&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Canadian Air Transat&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Cape Smythe Air Service&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Capital Airlines Inc.&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Capital Taxi Aereo&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Care Flight International&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Castle Aviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;CATA Linea Aerea&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Cebu PacifiAir&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Chalk&apos;s International Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Chalk&apos;s Ocean Airways&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Channel Express&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Chelan Air Service&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Cheremshanka Airlines&quot;' />
              <groupfilter from='&quot;China Airlines (Taiwan)&quot;' function='range' level='[none:Operator:nk]' to='&quot;China Flying Dragon Aviation (Feilong Airlines)&quot;' />
              <groupfilter from='&quot;China Northern Airlines&quot;' function='range' level='[none:Operator:nk]' to='&quot;China Southwest Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;City-Jet&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;College of the Ozarks&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Comair&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Compania de Aviacion Faucett SA (Peru)&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;ComvaAviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Congo Airline&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Continental Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Continental Connection/Colgan Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Conviasa&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Copterline&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;CORAL Colombia&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Corporate Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Corporate Airlines (American Connection)&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Crossair&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Cubana de Aviacion&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Cubana de Aviacon&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Custom Air Service&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Delta Air Lines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Deraps Aviation&quot;' />
              <groupfilter from='&quot;DHL Aviation Africa&quot;' function='range' level='[none:Operator:nk]' to='&quot;Djibouti Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Dutch Dakota Association&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;E.A.S. Aeroservizi&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Eagle Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Eagle Aviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Eagle Cap Leasing&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;EAS Airlines (Executive Airline Services)&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;East Coast Jets&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Ecuatair&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Ecuato Guineana de Aviacion&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;EgyptAir&quot;' />
              <groupfilter from='&quot;El Magal Aviation&quot;' function='range' level='[none:Operator:nk]' to='&quot;ELK Aviation Co. (leased from Eminex)&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Emery Worldwide&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Empire Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Enimex&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;ERA Aviation - Air Taxi&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Ethiopian Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Euro Asia Aviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Eurojet Italila&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Evolga&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Executive Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Expresso Aéreo&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Falcon Aviation Group&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Far East Aviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Faraz Qeshm Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Farnair Hungary&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Federal Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Fine Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;First Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Flash Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Flight Service&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Flightline&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Fly 540&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Force Area Populaire de Angola&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Formosa Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Fuerza Aérea Argentina&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Fuerza Aérea del Peru&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Fuerza Aérea Nicaragua&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Fun Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Gabon Express&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Galaxy Kavatsi Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Garamut Aviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Garuda Indonesia Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Georgia Express&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Ghana Airlink&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Gira Globo Charter&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Global Executive Aviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Gol Airlines / Private&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Goroka Air Services&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Grand Aire&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Great Lakes Business Complany&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;GT Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Guardia Nacional de Venezuela&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Gulf Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Hageland Aviation Services&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Haines Airways - Air Taxi&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Hallo Bay Air - Air Taxi&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Harbour Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Harka Air Services&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Hati Express&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Heavylift Cargo Airlines&quot;' />
              <groupfilter from='&quot;Heli-USA Airways&quot;' function='range' level='[none:Operator:nk]' to='&quot;Heliandes&quot;' />
              <groupfilter from='&quot;Helios Airways&quot;' function='range' level='[none:Operator:nk]' to='&quot;Heliwork WA Pty Ltd. - Air Taxi&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Heringer Air Taxi&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Hewa Bora Airways&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Himmelsschreiber&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Hoseba&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Huron Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;IAI 1124 Westwind&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Ibertrans Aérea&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Indian Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Indian Airlines/Alliance Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Indonesian National Police&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Inter-Island&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Intercontinental de Aviacion&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Iran Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Iran Asseman Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Island Airways&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Island Airways Ltd.&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Islands Nationair&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Itek Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Ivolga Avia&quot;' />
              <groupfilter from='&quot;Jet Pro&quot;' function='range' level='[none:Operator:nk]' to='&quot;Jetcraft&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Jett Paqueteria SA&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Juba Air Cargo&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Junction City Fire Department&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Kam Air&quot;' />
              <groupfilter from='&quot;Kapowsin Air Sports&quot;' function='range' level='[none:Operator:nk]' to='&quot;Kata Transportation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Kavatshi Airlines&quot;' />
              <groupfilter from='&quot;Kenya Airways&quot;' function='range' level='[none:Operator:nk]' to='&quot;Khors Aircompany&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Kimura International&quot;' />
              <groupfilter from='&quot;Kirghizia Aba Zaoldoru&quot;' function='range' level='[none:Operator:nk]' to='&quot;KLM Cityhopper&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Knight Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Komi Avia&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Korean Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Korean Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Krasnoyarskie Avialinii&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;La Costena&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;LACOL&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;LANC Colombia&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Lao Aviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Laoag International Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;LAPA, Lineas Aereas Privadas Argentinas&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Las Vegas Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Les Ailes de Gaspé Inc.&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Liard Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Linea Aérea Mexicana de Carga&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Lineas Aereas de los Libertadores&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Lineas Aereas del Caribe&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Lineas Aereas Suramericanas&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Líneas Aéreas Suramericanas&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Lion Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Lionair&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Loganair&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Lumbini Airways&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Luxair&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Malaysia Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Malindi Air Services&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Malu Aviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Manacá Táxi Aéreo&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Mandala Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Mango Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Manunggal Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Marco Zero Air Taxi&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Marsland Aviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Mavrik Aire Transport&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Mayoral Executive Jet&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;McKinley Air Service - Air Taxi&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Merpati Nusantara Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Metro Aviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Mexican Government&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;MIAT - Mongolian Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Mid-AtlantiFreight&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Million Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Milne Bay Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Mimika Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Minerva Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Missionary Aviation Fellowship&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;MK Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Morningstar Air Express&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Moskovia Airlines&quot;' />
              <groupfilter from='&quot;Mustique Airways&quot;' function='range' level='[none:Operator:nk]' to='&quot;Naftogaz&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Naske Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Naturelink&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Naysa Aerotaxis&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Necon Air&quot;' />
              <groupfilter from='&quot;NHR Táxi-Aéreo&quot;' function='range' level='[none:Operator:nk]' to='&quot;Nightexpress&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Norilsk Flight Company&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Norte Jet Táxi Aéreo&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;North Bay Charter&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;North Coast Aviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;North Western Air Transport&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Northern Air (Tanzania)&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Northern Executive Aviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Northern Illinois Flight Center&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Nyika Safaris&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Ocean Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;One-Two-Go Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Oriental Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Orion - Air Taxi&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;PacifiAir&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;PacifiAirways&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;PacifiCoast Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;PacifiCoastal Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Pakistan International Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Paradise Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Paramount Airlilnes&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Parsa&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Patagonia Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Paukn Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Pavair&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;PenAir&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Perimeter Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Permaviatrans&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Petroproducción&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Philippine Air Lines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Phoenix Aviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Pinnacle Airlines/Northwest Airlink&quot;' />
              <groupfilter from='&quot;Plane Sailing&quot;' function='range' level='[none:Operator:nk]' to='&quot;Polynesian Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Presidental Airways Inc. - Air Taxi&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Price Aircraft Company&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Priorty Air Charter&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Procuradoria General de la Republica&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Procuraduría General de la República&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Propair&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Provincial Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;PT Air Regional&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Pulkovo Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Pulkovo Aviation Enterprise&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Radeair&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Raytheon Aircraft&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;RCMP-GRC Air Services&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Reali Taxi Aereo&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Regency Express Air&quot;' />
              <groupfilter from='&quot;Regional Airlines&quot;' function='range' level='[none:Operator:nk]' to='&quot;Renan Airways&quot;' />
              <groupfilter from='&quot;Richmor Aviation&quot;' function='range' level='[none:Operator:nk]' to='&quot;Rico Taxi Aero&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Romanian Banat Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Rotorcraft Leasing Co&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Royal Air Maroc&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Royal Nepal Airlines&quot;' />
              <groupfilter from='&quot;Ruiban &amp; Duran Compania Aérea&quot;' function='range' level='[none:Operator:nk]' to='&quot;Rusts Flying Service Inc.&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Rutaca Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Rwanda Government&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Ryan Blake Air Charter&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;SA Amazonica&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Sabah Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;SAETA&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Safe Air Complany&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Saha Airline Services&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Sahara&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Sakha Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Salair&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Salmon Air - Air Taxi&quot;' />
              <groupfilter from='&quot;Sankuru Air Service&quot;' function='range' level='[none:Operator:nk]' to='&quot;Sarit Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Saskatchewan Government Northern Air Operations&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;SATA&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;SATENA&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Saudi Arabian Airlines / Kazastan Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Savanair&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Savannair&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;SAVIARE S.A. - Air Taxi&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;SceniAir Tours&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;SceniAirlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Scibe Airlift Cargo Zaire&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Seaview Aviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;SeaWind Aviation&quot;' />
              <groupfilter from='&quot;SELVA&quot;' function='range' level='[none:Operator:nk]' to='&quot;Selva Taxi Aero&quot;' />
              <groupfilter from='&quot;Sempati Air&quot;' function='range' level='[none:Operator:nk]' to='&quot;Service Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Servicio Aereo Manchupo&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Servicios Aeronauticos Sucre (SASCA)&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Servivensa&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Shangri La Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Sibir (S7)&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Sibir Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;SilkAir&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Singapore Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Sky Cabs&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Sky Executive Air Services&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Skyline Airways&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Skypower Express Airways&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Skyward Aviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;SL Aviation Services&quot;' />
              <groupfilter from='&quot;SoniBlue Airways&quot;' function='range' level='[none:Operator:nk]' to='&quot;Soundsair&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Southcentral Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Southern Sudan Air Connection&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Southwest Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Southwest Airlines&quot;' />
              <groupfilter from='&quot;Southwest Medivac&quot;' function='range' level='[none:Operator:nk]' to='&quot;Spanair&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Staer Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;STAP&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Stavropol Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Strait Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Streamline&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Sudan Airways&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Superior Aviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Svedijos Prekés&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Swifair&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Swissair&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;TAAG Angola Airlines&quot;' />
              <groupfilter from='&quot;TACA&quot;' function='range' level='[none:Operator:nk]' to='&quot;TAESA&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Tajikistan Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;TAM (Brazil)&quot;' />
              <groupfilter from='&quot;TAM Paraguay&quot;' function='range' level='[none:Operator:nk]' to='&quot;TAME&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;TanaMana Aviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;TANS Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;TANS Peru&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Taquan Air Service&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Tar Heel Aviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Tashkent Aircraft Production Corporation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Tassili Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Taxval&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Team Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Telford Aviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Terry Air Inc.&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Thai Airways&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Tiramavia&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;TMK Air Commuter&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Top Air - Air Taxi&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Total  Air Lines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Tracep&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Trade Wings Aviation Ltd.&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Trans Guyana Airways&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Trans Service Airlift&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Trans World Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Transafrik&quot;' />
              <groupfilter from='&quot;Transasia Airways&quot;' function='range' level='[none:Operator:nk]' to='&quot;Transaviaexport Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Transmandu&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Transniugini Airways&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Transoriente Colombia&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Transpolar&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Transported Areos Profesionales - TAPSA&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Transportes Aereos Pegaso&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Transporturile Aeriene Romane (TAROM)&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Transworld Safaris&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;TriCoastal Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Trigana Air Service&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Tropical Airways&quot;' />
              <groupfilter from='&quot;Tuninter&quot;' function='range' level='[none:Operator:nk]' to='&quot;Two Taxi Aero&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Tyumen Aviatrans&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Ukraine Aviation Transport Company&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Ukranian-Mediterranean Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Uni Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Union des Transports Aeriens de Guinee&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Union Flights&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;United Air Lines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;United Nations Mission&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Universal Jet Aviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Uralex&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;US Air Express/Air Midwest&quot;' />
              <groupfilter from='&quot;US Airways&quot;' function='range' level='[none:Operator:nk]' to='&quot;USAir&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;UTAir Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Uzbekistan Airways&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Uzu Air&quot;' />
              <groupfilter from='&quot;ValuJet&quot;' function='range' level='[none:Operator:nk]' to='&quot;Varig&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Venezolana&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Venezuelian Government&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Viaçao Cometa&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Victoria Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Vietnam Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Vincent Aviation&quot;' />
              <groupfilter from='&quot;Vladivostokavia&quot;' function='range' level='[none:Operator:nk]' to='&quot;Volga-Avia Express&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Vologodskiye Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Vostok Aviakompania&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Wasaya Airways&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Wayumi Air Taxi&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Webstas Aviation Services Inc.&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;West Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;West Caribbean Airways&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Western Straits Air&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Whyalla Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Wiggins Airways&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Wimbi Dira Airways&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Win Win Aviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Wuhan Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;XL Airways leased from Air New Zealand&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Yakutavia&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Yates Aviation&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Yeti Airlines&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Yug Avia&quot;' />
              <groupfilter function='member' level='[none:Operator:nk]' member='&quot;Zanex&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[yr:Date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Date:ok]' member='1994' />
              <groupfilter function='member' level='[yr:Date:ok]' member='1995' />
              <groupfilter function='member' level='[yr:Date:ok]' member='1996' />
              <groupfilter function='member' level='[yr:Date:ok]' member='1997' />
              <groupfilter function='member' level='[yr:Date:ok]' member='1998' />
              <groupfilter function='member' level='[yr:Date:ok]' member='1999' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2000' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2001' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2002' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2003' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2004' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2005' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2006' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2007' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2008' />
              <groupfilter function='member' level='[yr:Date:ok]' member='2009' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[yr:Date:ok]</column>
            <column>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Operator:nk]</column>
            <column>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[Latitude (generated)]</column>
            <column>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[Longitude (generated)]</column>
            <column>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[Country Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Country (copy)_4200802949705719819:nk]' />
              <color column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatalities:qk]' />
              <geometry column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[Latitude (generated)]</rows>
        <cols>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{24468E87-8065-49FA-9DCB-DF0EBCE25681}' />
    </worksheet>
    <worksheet name='Airplane Accident Rates per 100,000 Flight Hours'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Airplane Accident Rates per 100,000 Flight Hours</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Source: </run>
            <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://www-fars.nhtsa.dot.gov/Trends/TrendsGeneral.aspx&amp;quot;'>https://www-fars.nhtsa.dot.gov/Trends/TrendsGeneral.aspx</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Multiple Connections' name='federated.1ewkeyc1px91zx1czjfsr1g9mnrx' />
          </datasources>
          <datasource-dependencies datasource='federated.1ewkeyc1px91zx1czjfsr1g9mnrx'>
            <column datatype='real' name='[Total accidents 1]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total accidents, fatal 1]' role='measure' type='quantitative' />
            <column caption='Year (table 02 14 121819 2.csv)' datatype='integer' name='[Year (table_02_14_121819 2.csv)]' role='dimension' type='quantitative' />
            <column-instance column='[Year (table_02_14_121819 2.csv)]' derivation='None' name='[none:Year (table_02_14_121819 2.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total accidents 1]' derivation='Sum' name='[sum:Total accidents 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total accidents, fatal 1]' derivation='Sum' name='[sum:Total accidents, fatal 1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (table_02_14_121819 2.csv):qk]' included-values='in-range'>
            <min>1994</min>
            <max>2018</max>
          </filter>
          <slices>
            <column>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (table_02_14_121819 2.csv):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Total accidents, fatal 1:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Total accidents, fatal 1:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (table_02_14_121819 2.csv):qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Total accidents 1:qk]' scope='rows' value='Accident Rate per 100,000 Flight Hours' />
            <encoding attr='space' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (table_02_14_121819 2.csv):qk]' field-type='quantitative' max='2018' min='1994' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_0' value='#f3ebf3e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Total accidents 1:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Total accidents, fatal 1:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Total accidents 1:qk] + [federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Total accidents, fatal 1:qk])</rows>
        <cols>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (table_02_14_121819 2.csv):qk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontsize='6'>No</run>
              <run>Æ&#10;</run>
              <run fontsize='6'>Data</run>
              <run>Æ&#10;</run>
              <run fontsize='6'>2011</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2009.9967373572595'>
                  <node-reference>
                    <axis>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (table_02_14_121819 2.csv):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='9.5666793183578616'>
                  <node-reference>
                    <axis>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Total accidents 1:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2012.0065252854813'>
                  <node-reference>
                    <axis>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (table_02_14_121819 2.csv):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.014786212238574434'>
                  <node-reference>
                    <axis>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Total accidents 1:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{003E6CEE-6174-4548-A477-9D6BEDF6BB6E}' />
    </worksheet>
    <worksheet name='Airplane Fatal Incidents By Airline'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Fatal Incidents by Airline 2000 - 2014</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run fontsize='8'>Source: </run>
            <run auto-url='true' fontsize='8' hyperlink='tabdoc:load-url url=&amp;quot;https://github.com/fivethirtyeight/data/blob/master/airline-safety/airline-safety.csv&amp;quot;'>https://github.com/fivethirtyeight/data/blob/master/airline-safety/airline-safety.csv</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Multiple Connections' name='federated.1ewkeyc1px91zx1czjfsr1g9mnrx' />
          </datasources>
          <datasource-dependencies datasource='federated.1ewkeyc1px91zx1czjfsr1g9mnrx'>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column caption='Fatal Accidents 00 14' datatype='integer' name='[fatal_accidents_00_14]' role='measure' type='quantitative' />
            <column caption='Fatalities 00 14' datatype='integer' name='[fatalities_00_14]' role='measure' type='quantitative' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[fatal_accidents_00_14]' derivation='Sum' name='[sum:fatal_accidents_00_14:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fatalities_00_14]' derivation='Sum' name='[sum:fatalities_00_14:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:airline:nk]'>
            <groupfilter function='level-members' level='[none:airline:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:fatal_accidents_00_14:qk]' included-values='in-range'>
            <min>1</min>
            <max>3</max>
          </filter>
          <slices>
            <column>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:fatal_accidents_00_14:qk]</column>
            <column>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:airline:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='1' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:fatal_accidents_00_14:qk]' scope='cols' value='false' />
            <format attr='title' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:fatalities_00_14:qk]' scope='rows' value='Fatalities' />
            <format attr='title' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:fatal_accidents_00_14:qk]' scope='cols' value='Fatal Accidents' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:fatalities_00_14:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:fatalities_00_14:qk]' />
              <size column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:fatal_accidents_00_14:qk]' />
              <text column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:airline:nk]' />
              <lod column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:airline:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='3.4806630611419678' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-transparency' value='91' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:fatalities_00_14:qk]</rows>
        <cols>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:fatal_accidents_00_14:qk]</cols>
      </table>
      <simple-id uuid='{382BED62-9B19-4530-B62D-B7D5F1092AC6}' />
    </worksheet>
    <worksheet name='Car Fatality Rate per 100,000 Licensed Drivers'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Car Fatality Rate per 100,000,000 Miles Traveled</run>
            <run>Æ&#10;</run>
            <run fontsize='9'>The fatality rate is decreasing as time advances and thhe number of licensed drivers is increasing.</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Source: </run>
            <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://www-fars.nhtsa.dot.gov/Trends/TrendsGeneral.aspx&amp;quot;'>https://www-fars.nhtsa.dot.gov/Trends/TrendsGeneral.aspx</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Multiple Connections' name='federated.1ewkeyc1px91zx1czjfsr1g9mnrx' />
          </datasources>
          <datasource-dependencies datasource='federated.1ewkeyc1px91zx1czjfsr1g9mnrx'>
            <column caption='Fatality Rate per 100 Million VMT (Cars 94-18.csv)' datatype='real' name='[Fatality Rate per 100 Million VMT (Cars_94-18.csv)]' role='measure' type='quantitative' />
            <column caption='Vehicle Miles Traveled (Billions) (Cars 94-18.csv)' datatype='integer' name='[Vehicle Miles Traveled (Billions) (Cars_94-18.csv)]' role='measure' type='quantitative' />
            <column caption='Year (Cars 94-18.csv)' datatype='integer' name='[Year (Cars_94-18.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[Year (Cars_94-18.csv)]' derivation='None' name='[none:Year (Cars_94-18.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year (Cars_94-18.csv)]' derivation='None' name='[none:Year (Cars_94-18.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fatality Rate per 100 Million VMT (Cars_94-18.csv)]' derivation='Sum' name='[sum:Fatality Rate per 100 Million VMT (Cars_94-18.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Vehicle Miles Traveled (Billions) (Cars_94-18.csv)]' derivation='Sum' name='[sum:Vehicle Miles Traveled (Billions) (Cars_94-18.csv):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Cars_94-18.csv):ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Year (Cars_94-18.csv):ok]' />
              <groupfilter function='member' level='[none:Year (Cars_94-18.csv):ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Cars_94-18.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Vehicle Miles Traveled (Billions) (Cars_94-18.csv):qk]' scope='rows' value='Vehicle Miles Traveled (Billions)' />
            <format attr='title' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatality Rate per 100 Million VMT (Cars_94-18.csv):qk]' scope='rows' value='Fatality Rate per 100 Million Vehhicle Miles Traveled' />
            <encoding attr='space' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Cars_94-18.csv):qk]' field-type='quantitative' max='2019' min='1993' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Cars_94-18.csv):qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Cars_94-18.csv):ok]' value='0' />
            <format attr='display' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Cars_94-18.csv):ok]' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatality Rate per 100 Million VMT (Cars_94-18.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Vehicle Miles Traveled (Billions) (Cars_94-18.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#a0cbe8' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatality Rate per 100 Million VMT (Cars_94-18.csv):qk] + [federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Vehicle Miles Traveled (Billions) (Cars_94-18.csv):qk])</rows>
        <cols>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Cars_94-18.csv):qk]</cols>
      </table>
      <simple-id uuid='{7E64E8BC-DBCB-4A13-861A-3EC9145A092E}' />
    </worksheet>
    <worksheet name='Fatalities by Year - Line'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Total Car Fatalities by Year for United States</run>
            <run>Æ&#10;</run>
            <run fontcolor='#898989' fontsize='9'>We can see overall in both airplanes and cars, there is a downward trend in the number of incidents as time advances.</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Source: </run>
            <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://www-fars.nhtsa.dot.gov/Trends/TrendsGeneral.aspx&amp;quot;'>https://www-fars.nhtsa.dot.gov/Trends/TrendsGeneral.aspx</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Multiple Connections' name='federated.1ewkeyc1px91zx1czjfsr1g9mnrx' />
          </datasources>
          <datasource-dependencies datasource='federated.1ewkeyc1px91zx1czjfsr1g9mnrx'>
            <column caption='Fatalities (Cars 94-18.csv)' datatype='integer' name='[Fatalities (Cars_94-18.csv)]' role='measure' type='quantitative' />
            <column caption='Year (Cars 94-18.csv)' datatype='integer' name='[Year (Cars_94-18.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[Year (Cars_94-18.csv)]' derivation='None' name='[none:Year (Cars_94-18.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year (Cars_94-18.csv)]' derivation='None' name='[none:Year (Cars_94-18.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fatalities (Cars_94-18.csv)]' derivation='Sum' name='[sum:Fatalities (Cars_94-18.csv):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Cars_94-18.csv):ok]'>
            <groupfilter from='1994' function='range' level='[none:Year (Cars_94-18.csv):ok]' to='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Cars_94-18.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatalities (Cars_94-18.csv):qk]' scope='rows' value='Fatalities' />
            <encoding attr='space' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Cars_94-18.csv):qk]' field-type='quantitative' max='2019' min='1993' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Cars_94-18.csv):qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Cars_94-18.csv):ok]' value='0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatalities (Cars_94-18.csv):qk]</rows>
        <cols>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Cars_94-18.csv):qk]</cols>
      </table>
      <simple-id uuid='{41F44408-AC04-4265-9CDE-C637496900F8}' />
    </worksheet>
    <worksheet name='Fatalities by Year - Percent'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Total Car Fatalities by Year for United States</run>
            <run>Æ&#10;</run>
            <run fontcolor='#898989' fontsize='9'>We can see overall in both airplanes and cars, there is a downward trend in the number of incidents as time advances.</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Source: </run>
            <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://www-fars.nhtsa.dot.gov/Trends/TrendsGeneral.aspx&amp;quot;'>https://www-fars.nhtsa.dot.gov/Trends/TrendsGeneral.aspx</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Multiple Connections' name='federated.1ewkeyc1px91zx1czjfsr1g9mnrx' />
          </datasources>
          <datasource-dependencies datasource='federated.1ewkeyc1px91zx1czjfsr1g9mnrx'>
            <column caption='Total Percent Car' datatype='real' default-format='p0%' name='[Calculation_4200802947241590789]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Fatalities (Cars_94-18.csv)])/(Sum([Fatalities (Airplane Fatalities by Year 1918-2019.csv)]) + Sum([Fatalities (Cars_94-18.csv)]))' />
            </column>
            <column datatype='integer' name='[Fatalities (Airplane Fatalities by Year 1918-2019.csv)]' role='measure' type='quantitative' />
            <column caption='Fatalities (Cars 94-18.csv)' datatype='integer' name='[Fatalities (Cars_94-18.csv)]' role='measure' type='quantitative' />
            <column caption='Total Percent Airplane' datatype='real' default-format='p0%' name='[Total Percent Car (copy)_4200802947242176518]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Fatalities (Airplane Fatalities by Year 1918-2019.csv)])/(Sum([Fatalities (Airplane Fatalities by Year 1918-2019.csv)]) + Sum([Fatalities (Cars_94-18.csv)]))' />
            </column>
            <column datatype='integer' name='[Total fatalities]' role='measure' type='quantitative' />
            <column caption='Year (Cars 94-18.csv)' datatype='integer' name='[Year (Cars_94-18.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[Year (Cars_94-18.csv)]' derivation='None' name='[none:Year (Cars_94-18.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year (Cars_94-18.csv)]' derivation='None' name='[none:Year (Cars_94-18.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fatalities (Cars_94-18.csv)]' derivation='Sum' name='[sum:Fatalities (Cars_94-18.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total fatalities]' derivation='Sum' name='[sum:Total fatalities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4200802947241590789]' derivation='User' name='[usr:Calculation_4200802947241590789:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Percent Car (copy)_4200802947242176518]' derivation='User' name='[usr:Total Percent Car (copy)_4200802947242176518:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Cars_94-18.csv):ok]'>
            <groupfilter from='1994' function='range' level='[none:Year (Cars_94-18.csv):ok]' to='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Cars_94-18.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[usr:Calculation_4200802947241590789:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='render-fold-reversed' value='true' />
            <format attr='title' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Cars_94-18.csv):qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Cars_94-18.csv):qk]' field-type='quantitative' max='2019' min='1993' range-type='fixed' scope='cols' type='space' />
            <format attr='display' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[usr:Calculation_4200802947241590789:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[usr:Total Percent Car (copy)_4200802947242176518:qk]' scope='rows' value='Total Fatalities Percent' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[usr:Total Percent Car (copy)_4200802947242176518:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[:Measure Names]' />
              <tooltip column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Total fatalities:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[usr:Calculation_4200802947241590789:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[:Measure Names]' />
              <tooltip column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatalities (Cars_94-18.csv):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[usr:Total Percent Car (copy)_4200802947242176518:qk] + [federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[usr:Calculation_4200802947241590789:qk])</rows>
        <cols>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Cars_94-18.csv):qk]</cols>
      </table>
      <simple-id uuid='{007F87F4-BC4D-46BF-B76E-C71AD19545B1}' />
    </worksheet>
    <worksheet name='Flight Fatalities per 100,000 Flight Hours'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Airplane Fatalities per 100,000 Flight Hours</run>
            <run>Æ&#10;</run>
            <run fontsize='9'>The fatality rate per 100,000 hours has decreased as hs the nuber of flight hours.</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Source: </run>
            <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://www.bts.gov/content/us-general-aviationa-safety-data&amp;quot;'>https://www.bts.gov/content/us-general-aviationa-safety-data</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Multiple Connections' name='federated.1ewkeyc1px91zx1czjfsr1g9mnrx' />
          </datasources>
          <datasource-dependencies datasource='federated.1ewkeyc1px91zx1czjfsr1g9mnrx'>
            <column caption='Fatalities (table 02 14 121819 2.csv)' datatype='real' name='[Fatalities (table_02_14_121819 2.csv)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Flight hours (thousands)]' role='measure' type='quantitative' />
            <column caption='Year (table 02 14 121819 2.csv)' datatype='integer' name='[Year (table_02_14_121819 2.csv)]' role='dimension' type='quantitative' />
            <column-instance column='[Year (table_02_14_121819 2.csv)]' derivation='None' name='[none:Year (table_02_14_121819 2.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fatalities (table_02_14_121819 2.csv)]' derivation='Sum' name='[sum:Fatalities (table_02_14_121819 2.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Flight hours (thousands)]' derivation='Sum' name='[sum:Flight hours (thousands):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (table_02_14_121819 2.csv):qk]' included-values='in-range'>
            <min>1994</min>
            <max>2018</max>
          </filter>
          <filter class='quantitative' column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatalities (table_02_14_121819 2.csv):qk]' included-values='non-null' />
          <slices>
            <column>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (table_02_14_121819 2.csv):qk]</column>
            <column>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatalities (table_02_14_121819 2.csv):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatalities (table_02_14_121819 2.csv):qk]' scope='rows' value='Fatality Rate per 100,000 Flight Hours' />
            <format attr='title' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Flight hours (thousands):qk]' scope='rows' value='Flight Hours (thousands)' />
            <format attr='title' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (table_02_14_121819 2.csv):qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (table_02_14_121819 2.csv):qk]' field-type='quantitative' max='2019' min='1993' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_0' value='#f3ebf3e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Flight hours (thousands):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d4d4d4' />
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatalities (table_02_14_121819 2.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#898989' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatalities (table_02_14_121819 2.csv):qk] + [federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Flight hours (thousands):qk])</rows>
        <cols>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (table_02_14_121819 2.csv):qk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontsize='6'>No</run>
              <run>Æ&#10;</run>
              <run fontsize='6'>Data</run>
              <run>Æ&#10;</run>
              <run fontsize='6'>2011</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2010.4318181818182'>
                  <node-reference>
                    <axis>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (table_02_14_121819 2.csv):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='3.4615415959252971'>
                  <node-reference>
                    <axis>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatalities (table_02_14_121819 2.csv):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2011.5808080808081'>
                  <node-reference>
                    <axis>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (table_02_14_121819 2.csv):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='103.74662162162227'>
                  <node-reference>
                    <axis>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Flight hours (thousands):qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{6FA12115-625F-4568-8018-CA6BCE39B4D7}' />
    </worksheet>
    <worksheet name='Total Fatalities by Vehicle'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Percent of Total Fatalities (1994 -2010)</run>
            <run>Æ&#10;</run>
            <run fontcolor='#898989' fontsize='9'>The total fatalities for cars is collected for the United States only and the total for airplanes is collected worldwide.</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Source: &#10;Car Data -  </run>
            <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://www-fars.nhtsa.dot.gov/Trends/TrendsGeneral.aspx&amp;quot;'>https://www-fars.nhtsa.dot.gov/Trends/TrendsGeneral.aspx</run>
            <run>&#10;Airplane Data - </run>
            <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;http://www.baaa-acro.com/statistics/death-rate-per-year?page=1&amp;quot;'>http://www.baaa-acro.com/statistics/death-rate-per-year?page=1</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Multiple Connections' name='federated.1ewkeyc1px91zx1czjfsr1g9mnrx' />
          </datasources>
          <datasource-dependencies datasource='federated.1ewkeyc1px91zx1czjfsr1g9mnrx'>
            <column caption='Total Percent Car' datatype='real' default-format='p0%' name='[Calculation_4200802947241590789]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Fatalities (Cars_94-18.csv)])/(Sum([Fatalities (Airplane Fatalities by Year 1918-2019.csv)]) + Sum([Fatalities (Cars_94-18.csv)]))' />
            </column>
            <column datatype='integer' name='[Fatalities (Airplane Fatalities by Year 1918-2019.csv)]' role='measure' type='quantitative' />
            <column caption='Fatalities (Cars 94-18.csv)' datatype='integer' name='[Fatalities (Cars_94-18.csv)]' role='measure' type='quantitative' />
            <column caption='Total Percent Airplane' datatype='real' default-format='p0%' name='[Total Percent Car (copy)_4200802947242176518]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Fatalities (Airplane Fatalities by Year 1918-2019.csv)])/(Sum([Fatalities (Airplane Fatalities by Year 1918-2019.csv)]) + Sum([Fatalities (Cars_94-18.csv)]))' />
            </column>
            <column datatype='integer' name='[Year (Airplane Fatalities by Year 1918-2019.csv)]' role='dimension' type='quantitative' />
            <column-instance column='[Year (Airplane Fatalities by Year 1918-2019.csv)]' derivation='None' name='[none:Year (Airplane Fatalities by Year 1918-2019.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4200802947241590789]' derivation='User' name='[usr:Calculation_4200802947241590789:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Percent Car (copy)_4200802947242176518]' derivation='User' name='[usr:Total Percent Car (copy)_4200802947242176518:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[usr:Calculation_4200802947241590789:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[usr:Total Percent Car (copy)_4200802947242176518:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[usr:Calculation_4200802947241590789:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[usr:Total Percent Car (copy)_4200802947242176518:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Airplane Fatalities by Year 1918-2019.csv):qk]' included-values='in-range'>
            <min>1994</min>
            <max>2018</max>
          </filter>
          <slices>
            <column>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Airplane Fatalities by Year 1918-2019.csv):qk]</column>
            <column>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[Multiple Values]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[Multiple Values]' field-type='quantitative' major-origin='0.0' major-spacing='0.5' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[:Measure Names]' value='79' />
            <format attr='color' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[Multiple Values]' value='#1b1b1b' />
            <format attr='font-weight' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[Multiple Values]' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[:Measure Names]' value='60' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[Multiple Values]' value='p0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[:Measure Names]' />
              <text column='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{3D2F4673-5567-42CF-908C-C78548305EE1}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Airplane Fatal Incidents By Airline'>
      <cards>
        <edge name='left'>
          <strip size='202'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:fatal_accidents_00_14:qk]' type='size' />
            <card pane-specification-id='2' param='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:fatalities_00_14:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[:Measure Names]</field>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:fatalities_00_14:qk]</field>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:incidents_00_14:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F6DA4B1C-ACD4-47C1-A140-4C4B358D49AE}' />
    </window>
    <window class='worksheet' name='Airplane Accident Rates per 100,000 Flight Hours'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[:Measure Names]</field>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (table_02_14_121819 2.csv):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F83175CE-FA2B-4516-BD06-DCD117D77B9F}' />
    </window>
    <window class='worksheet' name='Car Fatality Rate per 100,000 Licensed Drivers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Cars_94-18.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A8B133FB-B297-4B5F-877D-94197612E219}' />
    </window>
    <window class='worksheet' name='Flight Fatalities per 100,000 Flight Hours'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (table_02_14_121819 2.csv):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C271F5F1-10B1-48F1-90CE-AB9B4DEAA156}' />
    </window>
    <window class='worksheet' name='Fatalities by Year - Line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[:Measure Names]</field>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Airplane Fatalities by Year 1918-2019.csv):qk]</field>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Cars_94-18.csv):ok]</field>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatalities (Cars_94-18.csv):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1B03C0BD-5BA5-45F2-A450-BA215A7C4B7D}' />
    </window>
    <window class='worksheet' name='Airline Fatalities by Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[:Measure Names]</field>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[Country Set]</field>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[hr:Time:ok]</field>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Airplane Fatalities by Year 1918-2019.csv):qk]</field>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Cars_94-18.csv):ok]</field>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (table_02_14_121819 2.csv):qk]</field>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatalities (Cars_94-18.csv):qk]</field>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5FA52C02-A27A-4A82-AE76-5A8B8EA6ACA7}' />
    </window>
    <window class='worksheet' name='Fatalities by Year - Percent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[:Measure Names]</field>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Airplane Fatalities by Year 1918-2019.csv):qk]</field>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Cars_94-18.csv):ok]</field>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatalities (Cars_94-18.csv):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5533995F-1EF6-40B5-9C0F-4D0C80708315}' />
    </window>
    <window class='worksheet' maximized='true' name='Total Fatalities by Vehicle'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='7' param='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Airplane Fatalities by Year 1918-2019.csv):qk]</field>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Year (Cars_94-18.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{29EBC09E-DBD9-4A3C-99FA-5CB84D3D6C5F}' />
    </window>
    <window class='worksheet' name='Airline Incidents By Location'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatalities:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[Country Set]</field>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Country (copy)_4200802949705719819:nk]</field>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Location:nk]</field>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[none:Operator:nk]</field>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[sum:Fatalities:qk]</field>
            <field>[federated.1ewkeyc1px91zx1czjfsr1g9mnrx].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{482D5DB4-05CB-4356-8224-59178B4CDB37}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Airline Fatalities by Year' width='384'>
      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
      XZYvBt8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Airline Incidents By Location' width='384'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='384' name='Airplane Accident Rates per 100,000 Flight Hours' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Airplane Fatal Incidents By Airline' width='384'>
      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
      8kmBE17lqgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Car Fatality Rate per 100,000 Licensed Drivers' width='384'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Fatalities by Year - Line' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Fatalities by Year - Percent' width='384'>
      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
      vslW3slYx5OxzJZl/eEPpRDV8ehSAIiIpCkFQJqYLEM/Mr4m48/FZCtzKpdXcwAiImlKPQAR
      kTSlABARSVMKABGRNOX+8Y9//OOJLkQqcRyH3t5ePvnkEyorK3G5XFiWxfbt29m6dSvRaDR5
      19GDBw+yceNGOjo6qKioSK5NjkajfPDBBxQVFZGRkTHmZbYsi4MHD9LZ2cm0adMAOHfuHOvX
      r+fw4cOUlJSQkZFBKBRiw4YN7NmzhylTpjBlyhQADh06xMaNGzl69CiVlZVjvvbecRx6enrY
      vHnzNes4FotRUlICwIEDB/j44485f/485eXluFwumpqa+Pjjjzl27Ni41XE4HGbr1q3s3LmT
      UChEeXk5ALt27aKurg7btikuLgbgyJEjbNiwgWAwSEVFBQBHjx7lww8/5MKFC1RUVFzz1iWj
      yXEcmpubqaur4/DhwxQVFZGZmUl3dzdr166lpaWF8vJyfD4fsViM9evXs3fvXqZOnUpWVha9
      vb1s3ryZXbt2EYvFKC0tHfPJzFAolKzjcDicvB38YB07jpP8+b6yjgfL1tPTw9q1a5kzZ864
      1HFTU9NXruMPPvggWcfZ2dnYts2uXbvYvHkzZ8+epaqqaszLHAqF2LJlS7KO1QO4wrFjx3jj
      jTdoampKrt9taGigv7+f559/npMnT9LU1MSZM2dobGxk9erVBAIB6urqkvvYvHkzra2t9Pb2
      jkuZ16xZw8GDBzl58iSQCIR3332XBx98kHvvvZff//73OI7DunXrmDdvHo8++ihr164lGo1y
      /Phx9u/fz7PPPsvSpUvH/AcQEnX8+9//nqampuSa7oaGBqLRKM8//zwnTpygubmZM2fOcODA
      AVavXo3P52PLli309vZSV1fHE088waJFi3jnnXfGvLyQeEBReXk5jz/+OKdPn06WsbW1lWee
      eYa9e/dy7tw5uru72bp1K0899RSRSITdu3fT09PDJ598wpNPPolpmuzatWvMyxsMBmlububB
      Bx/kzjvvZN26dViWxe9//3uWLVvGvHnzePfdd3Ech/fee4+ZM2eyYsUK3nnnHUzT5LPPPmP2
      7Nk89thjNDU1cfbs2TEv844dO6ioqODxxx/n1KlTyTo+ffo0zzzzDHv27KG9vZ1gMJis476+
      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
      RCRN/X/dIlY31E+BngAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Flight Fatalities per 100,000 Flight Hours' width='384'>
      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
    </thumbnail>
    <thumbnail height='108' name='Total Fatalities by Vehicle' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
